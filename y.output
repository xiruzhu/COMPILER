Nonterminals useless in grammar

   expr_case_clause_l
   operand
   literal


Terminals unused in grammar

   chan_
   const_
   go_
   import_
   interface_
   map_
   select_
   print_
   println_
   append_
   minus_
   div_
   mod_
   amp_
   caret_
   ls_
   rs_
   unknown_
   add_eq_
   minus_eq_
   mult_eq_
   div_eq_
   mod_eq_
   amp_eq_
   vb_eq_
   caret_eq_
   ls_eq_
   rs_eq_
   unknown_eq_
   and_
   or_
   arrow_
   equality_
   lt_
   gt_
   not_
   not_eq_
   lteq_
   gteq_
   etc_
   vb_
   int_lit_
   new_line_
   error_
   lteq
   unary


Rules useless in grammar

  119 expr_case_clause_l: expr_case_clause_l expr_case_clause
  120                   | expr_case_clause

  121 operand: literal
  122        | type
  123        | %empty

  124 literal: vb_


State 89 conflicts: 1 shift/reduce


Grammar

    0 $accept: go_prog $end

    1 line_end: semi_colon_
    2         | %empty

    3 id_list: id_list comma_ id_
    4        | id_

    5 block: lcbrac_ statement_list rcbrac_

    6 go_prog: pckg_decl top_decl_list
    7        | top_decl_list
    8        | %empty

    9 pckg_decl: package_ id_ line_end

   10 top_decl_list: top_decl_list top_decl
   11              | top_decl

   12 top_decl: decl
   13         | func_decl

   14 decl: type_decl
   15     | var_decl

   16 func_decl: func_type type block
   17          | func_type block

   18 func_decl_list: func_decl_list comma_ type_spec
   19               | type_spec

   20 var_decl: var_ var_decl_one_line
   21         | var_ lrbrac_ var_decl_mult_line rrbrac_

   22 var_decl_mult_line: var_decl_one_line
   23                   | var_decl_mult_line var_decl_one_line

   24 var_decl_one_line: id_list type
   25                  | id_list eq_ expr
   26                  | id_list type eq_ expr

   27 short_var_decl: id_list decla_ expr_list

   28 type_decl: type_ type_spec
   29          | type_ lrbrac_ type_spec_list rrbrac_

   30 type_spec_list: type_spec_list type_spec
   31               | type_spec

   32 type_spec: id_ type

   33 type: type_primitive
   34     | type_lit
   35     | id_ dot_ id_
   36     | lrbrac_ type rrbrac_

   37 type_primitive: bool_
   38               | rune_
   39               | string_
   40               | float_
   41               | int_

   42 type_lit: array_type
   43         | struct_type
   44         | pointer_type
   45         | func_type
   46         | slice_type

   47 array_type: lsbrac_ expr rsbrac_ type

   48 struct_type: struct_ lcbrac_ field_decl_list rcbrac_

   49 field_decl_list: field_decl_list field_decl
   50                | field_decl

   51 field_decl: id_list type

   52 pointer_type: mult_ type

   53 slice_type: lsbrac_ rsbrac_ type

   54 func_type: func_ id_ lrbrac_ func_decl_list rrbrac_ type

   55 statement_list: statement_list statement
   56               | %empty

   57 statement: decl
   58          | simple_stmt
   59          | labeled_stmt
   60          | return_stmt
   61          | break_stmt
   62          | goto_stmt
   63          | continue_stmt
   64          | fallthrough_
   65          | defer_ expr
   66          | block
   67          | if_stmt
   68          | for_stmt
   69          | switch_stmt

   70 labeled_stmt: id_ colon_ statement

   71 break_stmt: break_ id_

   72 simple_stmt: short_var_decl semi_colon_
   73            | expr semi_colon_
   74            | inc_dec_stmt semi_colon_
   75            | assignment semi_colon_

   76 goto_stmt: goto_ id_ semi_colon_

   77 continue_stmt: continue_ id_ semi_colon_

   78 return_stmt: return_ expr semi_colon_

   79 assignment: expr_list add_ eq_ expr_list semi_colon_
   80           | expr_list mult_ eq_ expr_list semi_colon_

   81 inc_dec_stmt: expr incre_ semi_colon_
   82             | expr decre_ semi_colon_

   83 if_stmt: if_ simple_stmt line_end expr block else_stmt
   84        | if_ expr block else_stmt

   85 else_stmt: %empty
   86          | else_ if_stmt
   87          | else_ block

   88 for_stmt: for_ for_clause block
   89         | for_ expr block
   90         | for_ range_clause block
   91         | for_ block

   92 for_clause: opt_simple_stmt semi_colon_ opt_expr semi_colon_ opt_simple_stmt

   93 range_clause: range_ expr
   94             | expr_list eq_ range_ expr
   95             | id_list decla_ range_ expr

   96 opt_expr: %empty
   97         | expr

   98 opt_simple_stmt: %empty
   99                | simple_stmt

  100 switch_stmt: expr_switch_stmt
  101            | type_switch_stmt

  102 expr_switch_stmt: switch_ simple_stmt opt_expr lcbrac_ expr_case_clause rcbrac_
  103                 | switch_ opt_expr lcbrac_ expr_case_clause rcbrac_

  104 expr_case_clause: case_ expr_list colon_ statement_list
  105                 | default_ colon_ statement_list

  106 type_switch_stmt: switch_ opt_simple_stmt type_switch_guard lcbrac_ type_case_clause_l rrbrac_

  107 type_switch_guard: id_ decla_ primary_expr dot_ lrbrac_ type_ rrbrac_
  108                  | primary_expr dot_ lrbrac_ type_ rrbrac_

  109 type_case_clause_l: type_case_clause type_case_clause_l
  110                   | %empty

  111 type_case_clause: type_switch_case colon_ statement_list

  112 type_switch_case: case_ type_list
  113                 | default_

  114 type_list: type_list comma_ type
  115          | type

  116 expr_list: rune_lit_

  117 expr: float_lit_

  118 primary_expr: string_lit_


Terminals, with rules where they appear

$end (0) 0
error (256)
break_ (258) 71
case_ (259) 104 112
chan_ (260)
const_ (261)
continue_ (262) 77
default_ (263) 105 113
defer_ (264) 65
else_ (265) 86 87
fallthrough_ (266) 64
for_ (267) 88 89 90 91
func_ (268) 54
go_ (269)
goto_ (270) 76
if_ (271) 83 84
import_ (272)
interface_ (273)
map_ (274)
package_ (275) 9
range_ (276) 93 94 95
return_ (277) 78
select_ (278)
struct_ (279) 48
switch_ (280) 102 103 106
type_ (281) 28 29 107 108
var_ (282) 20 21
int_ (283) 41
float_ (284) 40
bool_ (285) 37
rune_ (286) 38
string_ (287) 39
print_ (288)
println_ (289)
append_ (290)
add_ (291) 79
minus_ (292)
mult_ (293) 52 80
div_ (294)
mod_ (295)
amp_ (296)
caret_ (297)
ls_ (298)
rs_ (299)
unknown_ (300)
add_eq_ (301)
minus_eq_ (302)
mult_eq_ (303)
div_eq_ (304)
mod_eq_ (305)
amp_eq_ (306)
vb_eq_ (307)
caret_eq_ (308)
ls_eq_ (309)
rs_eq_ (310)
unknown_eq_ (311)
and_ (312)
or_ (313)
arrow_ (314)
incre_ (315) 81
decre_ (316) 82
equality_ (317)
lt_ (318)
gt_ (319)
eq_ (320) 25 26 79 80 94
not_ (321)
not_eq_ (322)
lteq_ (323)
gteq_ (324)
decla_ (325) 27 95 107
etc_ (326)
lrbrac_ (327) 21 29 36 54 107 108
rrbrac_ (328) 21 29 36 54 106 107 108
lsbrac_ (329) 47 53
rsbrac_ (330) 47 53
lcbrac_ (331) 5 48 102 103 106
rcbrac_ (332) 5 48 102 103
comma_ (333) 3 18 114
dot_ (334) 35 107 108
colon_ (335) 70 104 105 111
vb_ (336)
int_lit_ (337)
float_lit_ (338) 117
string_lit_ (339) 118
rune_lit_ (340) 116
semi_colon_ (341) 1 72 73 74 75 76 77 78 79 80 81 82 92
id_ (342) 3 4 9 32 35 54 70 71 76 77 107
new_line_ (343)
error_ (344)
lteq (345)
unary (346)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
line_end (93)
    on left: 1 2, on right: 9 83
id_list (94)
    on left: 3 4, on right: 3 24 25 26 27 51 95
block (95)
    on left: 5, on right: 16 17 66 83 84 87 88 89 90 91
go_prog (96)
    on left: 6 7 8, on right: 0
pckg_decl (97)
    on left: 9, on right: 6
top_decl_list (98)
    on left: 10 11, on right: 6 7 10
top_decl (99)
    on left: 12 13, on right: 10 11
decl (100)
    on left: 14 15, on right: 12 57
func_decl (101)
    on left: 16 17, on right: 13
func_decl_list (102)
    on left: 18 19, on right: 18 54
var_decl (103)
    on left: 20 21, on right: 15
var_decl_mult_line (104)
    on left: 22 23, on right: 21 23
var_decl_one_line (105)
    on left: 24 25 26, on right: 20 22 23
short_var_decl (106)
    on left: 27, on right: 72
type_decl (107)
    on left: 28 29, on right: 14
type_spec_list (108)
    on left: 30 31, on right: 29 30
type_spec (109)
    on left: 32, on right: 18 19 28 30 31
type (110)
    on left: 33 34 35 36, on right: 16 24 26 32 36 47 51 52 53 54 114
    115
type_primitive (111)
    on left: 37 38 39 40 41, on right: 33
type_lit (112)
    on left: 42 43 44 45 46, on right: 34
array_type (113)
    on left: 47, on right: 42
struct_type (114)
    on left: 48, on right: 43
field_decl_list (115)
    on left: 49 50, on right: 48 49
field_decl (116)
    on left: 51, on right: 49 50
pointer_type (117)
    on left: 52, on right: 44
slice_type (118)
    on left: 53, on right: 46
func_type (119)
    on left: 54, on right: 16 17 45
statement_list (120)
    on left: 55 56, on right: 5 55 104 105 111
statement (121)
    on left: 57 58 59 60 61 62 63 64 65 66 67 68 69, on right: 55 70
labeled_stmt (122)
    on left: 70, on right: 59
break_stmt (123)
    on left: 71, on right: 61
simple_stmt (124)
    on left: 72 73 74 75, on right: 58 83 99 102
goto_stmt (125)
    on left: 76, on right: 62
continue_stmt (126)
    on left: 77, on right: 63
return_stmt (127)
    on left: 78, on right: 60
assignment (128)
    on left: 79 80, on right: 75
inc_dec_stmt (129)
    on left: 81 82, on right: 74
if_stmt (130)
    on left: 83 84, on right: 67 86
else_stmt (131)
    on left: 85 86 87, on right: 83 84
for_stmt (132)
    on left: 88 89 90 91, on right: 68
for_clause (133)
    on left: 92, on right: 88
range_clause (134)
    on left: 93 94 95, on right: 90
opt_expr (135)
    on left: 96 97, on right: 92 102 103
opt_simple_stmt (136)
    on left: 98 99, on right: 92 106
switch_stmt (137)
    on left: 100 101, on right: 69
expr_switch_stmt (138)
    on left: 102 103, on right: 100
expr_case_clause (139)
    on left: 104 105, on right: 102 103
type_switch_stmt (140)
    on left: 106, on right: 101
type_switch_guard (141)
    on left: 107 108, on right: 106
type_case_clause_l (142)
    on left: 109 110, on right: 106 109
type_case_clause (143)
    on left: 111, on right: 109
type_switch_case (144)
    on left: 112 113, on right: 111
type_list (145)
    on left: 114 115, on right: 112 114
expr_list (146)
    on left: 116, on right: 27 79 80 94 104
expr (147)
    on left: 117, on right: 25 26 47 65 73 78 81 82 83 84 89 93 94
    95 97
primary_expr (148)
    on left: 118, on right: 107 108


State 0

    0 $accept: . go_prog $end

    func_     shift, and go to state 1
    package_  shift, and go to state 2
    type_     shift, and go to state 3
    var_      shift, and go to state 4

    $default  reduce using rule 8 (go_prog)

    go_prog        go to state 5
    pckg_decl      go to state 6
    top_decl_list  go to state 7
    top_decl       go to state 8
    decl           go to state 9
    func_decl      go to state 10
    var_decl       go to state 11
    type_decl      go to state 12
    func_type      go to state 13


State 1

   54 func_type: func_ . id_ lrbrac_ func_decl_list rrbrac_ type

    id_  shift, and go to state 14


State 2

    9 pckg_decl: package_ . id_ line_end

    id_  shift, and go to state 15


State 3

   28 type_decl: type_ . type_spec
   29          | type_ . lrbrac_ type_spec_list rrbrac_

    lrbrac_  shift, and go to state 16
    id_      shift, and go to state 17

    type_spec  go to state 18


State 4

   20 var_decl: var_ . var_decl_one_line
   21         | var_ . lrbrac_ var_decl_mult_line rrbrac_

    lrbrac_  shift, and go to state 19
    id_      shift, and go to state 20

    id_list            go to state 21
    var_decl_one_line  go to state 22


State 5

    0 $accept: go_prog . $end

    $end  shift, and go to state 23


State 6

    6 go_prog: pckg_decl . top_decl_list

    func_  shift, and go to state 1
    type_  shift, and go to state 3
    var_   shift, and go to state 4

    top_decl_list  go to state 24
    top_decl       go to state 8
    decl           go to state 9
    func_decl      go to state 10
    var_decl       go to state 11
    type_decl      go to state 12
    func_type      go to state 13


State 7

    7 go_prog: top_decl_list .
   10 top_decl_list: top_decl_list . top_decl

    func_  shift, and go to state 1
    type_  shift, and go to state 3
    var_   shift, and go to state 4

    $default  reduce using rule 7 (go_prog)

    top_decl   go to state 25
    decl       go to state 9
    func_decl  go to state 10
    var_decl   go to state 11
    type_decl  go to state 12
    func_type  go to state 13


State 8

   11 top_decl_list: top_decl .

    $default  reduce using rule 11 (top_decl_list)


State 9

   12 top_decl: decl .

    $default  reduce using rule 12 (top_decl)


State 10

   13 top_decl: func_decl .

    $default  reduce using rule 13 (top_decl)


State 11

   15 decl: var_decl .

    $default  reduce using rule 15 (decl)


State 12

   14 decl: type_decl .

    $default  reduce using rule 14 (decl)


State 13

   16 func_decl: func_type . type block
   17          | func_type . block

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    lcbrac_  shift, and go to state 35
    id_      shift, and go to state 36

    block           go to state 37
    type            go to state 38
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 14

   54 func_type: func_ id_ . lrbrac_ func_decl_list rrbrac_ type

    lrbrac_  shift, and go to state 46


State 15

    9 pckg_decl: package_ id_ . line_end

    semi_colon_  shift, and go to state 47

    $default  reduce using rule 2 (line_end)

    line_end  go to state 48


State 16

   29 type_decl: type_ lrbrac_ . type_spec_list rrbrac_

    id_  shift, and go to state 17

    type_spec_list  go to state 49
    type_spec       go to state 50


State 17

   32 type_spec: id_ . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 51
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 18

   28 type_decl: type_ type_spec .

    $default  reduce using rule 28 (type_decl)


State 19

   21 var_decl: var_ lrbrac_ . var_decl_mult_line rrbrac_

    id_  shift, and go to state 20

    id_list             go to state 21
    var_decl_mult_line  go to state 52
    var_decl_one_line   go to state 53


State 20

    4 id_list: id_ .

    $default  reduce using rule 4 (id_list)


State 21

    3 id_list: id_list . comma_ id_
   24 var_decl_one_line: id_list . type
   25                  | id_list . eq_ expr
   26                  | id_list . type eq_ expr

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    eq_      shift, and go to state 54
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    comma_   shift, and go to state 55
    id_      shift, and go to state 36

    type            go to state 56
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 22

   20 var_decl: var_ var_decl_one_line .

    $default  reduce using rule 20 (var_decl)


State 23

    0 $accept: go_prog $end .

    $default  accept


State 24

    6 go_prog: pckg_decl top_decl_list .
   10 top_decl_list: top_decl_list . top_decl

    func_  shift, and go to state 1
    type_  shift, and go to state 3
    var_   shift, and go to state 4

    $default  reduce using rule 6 (go_prog)

    top_decl   go to state 25
    decl       go to state 9
    func_decl  go to state 10
    var_decl   go to state 11
    type_decl  go to state 12
    func_type  go to state 13


State 25

   10 top_decl_list: top_decl_list top_decl .

    $default  reduce using rule 10 (top_decl_list)


State 26

   48 struct_type: struct_ . lcbrac_ field_decl_list rcbrac_

    lcbrac_  shift, and go to state 57


State 27

   41 type_primitive: int_ .

    $default  reduce using rule 41 (type_primitive)


State 28

   40 type_primitive: float_ .

    $default  reduce using rule 40 (type_primitive)


State 29

   37 type_primitive: bool_ .

    $default  reduce using rule 37 (type_primitive)


State 30

   38 type_primitive: rune_ .

    $default  reduce using rule 38 (type_primitive)


State 31

   39 type_primitive: string_ .

    $default  reduce using rule 39 (type_primitive)


State 32

   52 pointer_type: mult_ . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 58
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 33

   36 type: lrbrac_ . type rrbrac_

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 59
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 34

   47 array_type: lsbrac_ . expr rsbrac_ type
   53 slice_type: lsbrac_ . rsbrac_ type

    rsbrac_     shift, and go to state 60
    float_lit_  shift, and go to state 61

    expr  go to state 62


State 35

    5 block: lcbrac_ . statement_list rcbrac_

    $default  reduce using rule 56 (statement_list)

    statement_list  go to state 63


State 36

   35 type: id_ . dot_ id_

    dot_  shift, and go to state 64


State 37

   17 func_decl: func_type block .

    $default  reduce using rule 17 (func_decl)


State 38

   16 func_decl: func_type type . block

    lcbrac_  shift, and go to state 35

    block  go to state 65


State 39

   33 type: type_primitive .

    $default  reduce using rule 33 (type)


State 40

   34 type: type_lit .

    $default  reduce using rule 34 (type)


State 41

   42 type_lit: array_type .

    $default  reduce using rule 42 (type_lit)


State 42

   43 type_lit: struct_type .

    $default  reduce using rule 43 (type_lit)


State 43

   44 type_lit: pointer_type .

    $default  reduce using rule 44 (type_lit)


State 44

   46 type_lit: slice_type .

    $default  reduce using rule 46 (type_lit)


State 45

   45 type_lit: func_type .

    $default  reduce using rule 45 (type_lit)


State 46

   54 func_type: func_ id_ lrbrac_ . func_decl_list rrbrac_ type

    id_  shift, and go to state 17

    func_decl_list  go to state 66
    type_spec       go to state 67


State 47

    1 line_end: semi_colon_ .

    $default  reduce using rule 1 (line_end)


State 48

    9 pckg_decl: package_ id_ line_end .

    $default  reduce using rule 9 (pckg_decl)


State 49

   29 type_decl: type_ lrbrac_ type_spec_list . rrbrac_
   30 type_spec_list: type_spec_list . type_spec

    rrbrac_  shift, and go to state 68
    id_      shift, and go to state 17

    type_spec  go to state 69


State 50

   31 type_spec_list: type_spec .

    $default  reduce using rule 31 (type_spec_list)


State 51

   32 type_spec: id_ type .

    $default  reduce using rule 32 (type_spec)


State 52

   21 var_decl: var_ lrbrac_ var_decl_mult_line . rrbrac_
   23 var_decl_mult_line: var_decl_mult_line . var_decl_one_line

    rrbrac_  shift, and go to state 70
    id_      shift, and go to state 20

    id_list            go to state 21
    var_decl_one_line  go to state 71


State 53

   22 var_decl_mult_line: var_decl_one_line .

    $default  reduce using rule 22 (var_decl_mult_line)


State 54

   25 var_decl_one_line: id_list eq_ . expr

    float_lit_  shift, and go to state 61

    expr  go to state 72


State 55

    3 id_list: id_list comma_ . id_

    id_  shift, and go to state 73


State 56

   24 var_decl_one_line: id_list type .
   26                  | id_list type . eq_ expr

    eq_  shift, and go to state 74

    $default  reduce using rule 24 (var_decl_one_line)


State 57

   48 struct_type: struct_ lcbrac_ . field_decl_list rcbrac_

    id_  shift, and go to state 20

    id_list          go to state 75
    field_decl_list  go to state 76
    field_decl       go to state 77


State 58

   52 pointer_type: mult_ type .

    $default  reduce using rule 52 (pointer_type)


State 59

   36 type: lrbrac_ type . rrbrac_

    rrbrac_  shift, and go to state 78


State 60

   53 slice_type: lsbrac_ rsbrac_ . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 79
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 61

  117 expr: float_lit_ .

    $default  reduce using rule 117 (expr)


State 62

   47 array_type: lsbrac_ expr . rsbrac_ type

    rsbrac_  shift, and go to state 80


State 63

    5 block: lcbrac_ statement_list . rcbrac_
   55 statement_list: statement_list . statement

    break_        shift, and go to state 81
    continue_     shift, and go to state 82
    defer_        shift, and go to state 83
    fallthrough_  shift, and go to state 84
    for_          shift, and go to state 85
    goto_         shift, and go to state 86
    if_           shift, and go to state 87
    return_       shift, and go to state 88
    switch_       shift, and go to state 89
    type_         shift, and go to state 3
    var_          shift, and go to state 4
    lcbrac_       shift, and go to state 35
    rcbrac_       shift, and go to state 90
    float_lit_    shift, and go to state 61
    rune_lit_     shift, and go to state 91
    id_           shift, and go to state 92

    id_list           go to state 93
    block             go to state 94
    decl              go to state 95
    var_decl          go to state 11
    short_var_decl    go to state 96
    type_decl         go to state 12
    statement         go to state 97
    labeled_stmt      go to state 98
    break_stmt        go to state 99
    simple_stmt       go to state 100
    goto_stmt         go to state 101
    continue_stmt     go to state 102
    return_stmt       go to state 103
    assignment        go to state 104
    inc_dec_stmt      go to state 105
    if_stmt           go to state 106
    for_stmt          go to state 107
    switch_stmt       go to state 108
    expr_switch_stmt  go to state 109
    type_switch_stmt  go to state 110
    expr_list         go to state 111
    expr              go to state 112


State 64

   35 type: id_ dot_ . id_

    id_  shift, and go to state 113


State 65

   16 func_decl: func_type type block .

    $default  reduce using rule 16 (func_decl)


State 66

   18 func_decl_list: func_decl_list . comma_ type_spec
   54 func_type: func_ id_ lrbrac_ func_decl_list . rrbrac_ type

    rrbrac_  shift, and go to state 114
    comma_   shift, and go to state 115


State 67

   19 func_decl_list: type_spec .

    $default  reduce using rule 19 (func_decl_list)


State 68

   29 type_decl: type_ lrbrac_ type_spec_list rrbrac_ .

    $default  reduce using rule 29 (type_decl)


State 69

   30 type_spec_list: type_spec_list type_spec .

    $default  reduce using rule 30 (type_spec_list)


State 70

   21 var_decl: var_ lrbrac_ var_decl_mult_line rrbrac_ .

    $default  reduce using rule 21 (var_decl)


State 71

   23 var_decl_mult_line: var_decl_mult_line var_decl_one_line .

    $default  reduce using rule 23 (var_decl_mult_line)


State 72

   25 var_decl_one_line: id_list eq_ expr .

    $default  reduce using rule 25 (var_decl_one_line)


State 73

    3 id_list: id_list comma_ id_ .

    $default  reduce using rule 3 (id_list)


State 74

   26 var_decl_one_line: id_list type eq_ . expr

    float_lit_  shift, and go to state 61

    expr  go to state 116


State 75

    3 id_list: id_list . comma_ id_
   51 field_decl: id_list . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    comma_   shift, and go to state 55
    id_      shift, and go to state 36

    type            go to state 117
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 76

   48 struct_type: struct_ lcbrac_ field_decl_list . rcbrac_
   49 field_decl_list: field_decl_list . field_decl

    rcbrac_  shift, and go to state 118
    id_      shift, and go to state 20

    id_list     go to state 75
    field_decl  go to state 119


State 77

   50 field_decl_list: field_decl .

    $default  reduce using rule 50 (field_decl_list)


State 78

   36 type: lrbrac_ type rrbrac_ .

    $default  reduce using rule 36 (type)


State 79

   53 slice_type: lsbrac_ rsbrac_ type .

    $default  reduce using rule 53 (slice_type)


State 80

   47 array_type: lsbrac_ expr rsbrac_ . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 120
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 81

   71 break_stmt: break_ . id_

    id_  shift, and go to state 121


State 82

   77 continue_stmt: continue_ . id_ semi_colon_

    id_  shift, and go to state 122


State 83

   65 statement: defer_ . expr

    float_lit_  shift, and go to state 61

    expr  go to state 123


State 84

   64 statement: fallthrough_ .

    $default  reduce using rule 64 (statement)


State 85

   88 for_stmt: for_ . for_clause block
   89         | for_ . expr block
   90         | for_ . range_clause block
   91         | for_ . block

    range_      shift, and go to state 124
    lcbrac_     shift, and go to state 35
    float_lit_  shift, and go to state 61
    rune_lit_   shift, and go to state 91
    id_         shift, and go to state 20

    $default  reduce using rule 98 (opt_simple_stmt)

    id_list          go to state 125
    block            go to state 126
    short_var_decl   go to state 96
    simple_stmt      go to state 127
    assignment       go to state 104
    inc_dec_stmt     go to state 105
    for_clause       go to state 128
    range_clause     go to state 129
    opt_simple_stmt  go to state 130
    expr_list        go to state 131
    expr             go to state 132


State 86

   76 goto_stmt: goto_ . id_ semi_colon_

    id_  shift, and go to state 133


State 87

   83 if_stmt: if_ . simple_stmt line_end expr block else_stmt
   84        | if_ . expr block else_stmt

    float_lit_  shift, and go to state 61
    rune_lit_   shift, and go to state 91
    id_         shift, and go to state 20

    id_list         go to state 93
    short_var_decl  go to state 96
    simple_stmt     go to state 134
    assignment      go to state 104
    inc_dec_stmt    go to state 105
    expr_list       go to state 111
    expr            go to state 135


State 88

   78 return_stmt: return_ . expr semi_colon_

    float_lit_  shift, and go to state 61

    expr  go to state 136


State 89

  102 expr_switch_stmt: switch_ . simple_stmt opt_expr lcbrac_ expr_case_clause rcbrac_
  103                 | switch_ . opt_expr lcbrac_ expr_case_clause rcbrac_
  106 type_switch_stmt: switch_ . opt_simple_stmt type_switch_guard lcbrac_ type_case_clause_l rrbrac_

    float_lit_  shift, and go to state 61
    rune_lit_   shift, and go to state 91
    id_         shift, and go to state 20

    string_lit_  reduce using rule 98 (opt_simple_stmt)
    id_          [reduce using rule 98 (opt_simple_stmt)]
    $default     reduce using rule 96 (opt_expr)

    id_list          go to state 93
    short_var_decl   go to state 96
    simple_stmt      go to state 137
    assignment       go to state 104
    inc_dec_stmt     go to state 105
    opt_expr         go to state 138
    opt_simple_stmt  go to state 139
    expr_list        go to state 111
    expr             go to state 140


State 90

    5 block: lcbrac_ statement_list rcbrac_ .

    $default  reduce using rule 5 (block)


State 91

  116 expr_list: rune_lit_ .

    $default  reduce using rule 116 (expr_list)


State 92

    4 id_list: id_ .
   70 labeled_stmt: id_ . colon_ statement

    colon_  shift, and go to state 141

    $default  reduce using rule 4 (id_list)


State 93

    3 id_list: id_list . comma_ id_
   27 short_var_decl: id_list . decla_ expr_list

    decla_  shift, and go to state 142
    comma_  shift, and go to state 55


State 94

   66 statement: block .

    $default  reduce using rule 66 (statement)


State 95

   57 statement: decl .

    $default  reduce using rule 57 (statement)


State 96

   72 simple_stmt: short_var_decl . semi_colon_

    semi_colon_  shift, and go to state 143


State 97

   55 statement_list: statement_list statement .

    $default  reduce using rule 55 (statement_list)


State 98

   59 statement: labeled_stmt .

    $default  reduce using rule 59 (statement)


State 99

   61 statement: break_stmt .

    $default  reduce using rule 61 (statement)


State 100

   58 statement: simple_stmt .

    $default  reduce using rule 58 (statement)


State 101

   62 statement: goto_stmt .

    $default  reduce using rule 62 (statement)


State 102

   63 statement: continue_stmt .

    $default  reduce using rule 63 (statement)


State 103

   60 statement: return_stmt .

    $default  reduce using rule 60 (statement)


State 104

   75 simple_stmt: assignment . semi_colon_

    semi_colon_  shift, and go to state 144


State 105

   74 simple_stmt: inc_dec_stmt . semi_colon_

    semi_colon_  shift, and go to state 145


State 106

   67 statement: if_stmt .

    $default  reduce using rule 67 (statement)


State 107

   68 statement: for_stmt .

    $default  reduce using rule 68 (statement)


State 108

   69 statement: switch_stmt .

    $default  reduce using rule 69 (statement)


State 109

  100 switch_stmt: expr_switch_stmt .

    $default  reduce using rule 100 (switch_stmt)


State 110

  101 switch_stmt: type_switch_stmt .

    $default  reduce using rule 101 (switch_stmt)


State 111

   79 assignment: expr_list . add_ eq_ expr_list semi_colon_
   80           | expr_list . mult_ eq_ expr_list semi_colon_

    add_   shift, and go to state 146
    mult_  shift, and go to state 147


State 112

   73 simple_stmt: expr . semi_colon_
   81 inc_dec_stmt: expr . incre_ semi_colon_
   82             | expr . decre_ semi_colon_

    incre_       shift, and go to state 148
    decre_       shift, and go to state 149
    semi_colon_  shift, and go to state 150


State 113

   35 type: id_ dot_ id_ .

    $default  reduce using rule 35 (type)


State 114

   54 func_type: func_ id_ lrbrac_ func_decl_list rrbrac_ . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 151
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 115

   18 func_decl_list: func_decl_list comma_ . type_spec

    id_  shift, and go to state 17

    type_spec  go to state 152


State 116

   26 var_decl_one_line: id_list type eq_ expr .

    $default  reduce using rule 26 (var_decl_one_line)


State 117

   51 field_decl: id_list type .

    $default  reduce using rule 51 (field_decl)


State 118

   48 struct_type: struct_ lcbrac_ field_decl_list rcbrac_ .

    $default  reduce using rule 48 (struct_type)


State 119

   49 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 49 (field_decl_list)


State 120

   47 array_type: lsbrac_ expr rsbrac_ type .

    $default  reduce using rule 47 (array_type)


State 121

   71 break_stmt: break_ id_ .

    $default  reduce using rule 71 (break_stmt)


State 122

   77 continue_stmt: continue_ id_ . semi_colon_

    semi_colon_  shift, and go to state 153


State 123

   65 statement: defer_ expr .

    $default  reduce using rule 65 (statement)


State 124

   93 range_clause: range_ . expr

    float_lit_  shift, and go to state 61

    expr  go to state 154


State 125

    3 id_list: id_list . comma_ id_
   27 short_var_decl: id_list . decla_ expr_list
   95 range_clause: id_list . decla_ range_ expr

    decla_  shift, and go to state 155
    comma_  shift, and go to state 55


State 126

   91 for_stmt: for_ block .

    $default  reduce using rule 91 (for_stmt)


State 127

   99 opt_simple_stmt: simple_stmt .

    $default  reduce using rule 99 (opt_simple_stmt)


State 128

   88 for_stmt: for_ for_clause . block

    lcbrac_  shift, and go to state 35

    block  go to state 156


State 129

   90 for_stmt: for_ range_clause . block

    lcbrac_  shift, and go to state 35

    block  go to state 157


State 130

   92 for_clause: opt_simple_stmt . semi_colon_ opt_expr semi_colon_ opt_simple_stmt

    semi_colon_  shift, and go to state 158


State 131

   79 assignment: expr_list . add_ eq_ expr_list semi_colon_
   80           | expr_list . mult_ eq_ expr_list semi_colon_
   94 range_clause: expr_list . eq_ range_ expr

    add_   shift, and go to state 146
    mult_  shift, and go to state 147
    eq_    shift, and go to state 159


State 132

   73 simple_stmt: expr . semi_colon_
   81 inc_dec_stmt: expr . incre_ semi_colon_
   82             | expr . decre_ semi_colon_
   89 for_stmt: for_ expr . block

    incre_       shift, and go to state 148
    decre_       shift, and go to state 149
    lcbrac_      shift, and go to state 35
    semi_colon_  shift, and go to state 150

    block  go to state 160


State 133

   76 goto_stmt: goto_ id_ . semi_colon_

    semi_colon_  shift, and go to state 161


State 134

   83 if_stmt: if_ simple_stmt . line_end expr block else_stmt

    semi_colon_  shift, and go to state 47

    $default  reduce using rule 2 (line_end)

    line_end  go to state 162


State 135

   73 simple_stmt: expr . semi_colon_
   81 inc_dec_stmt: expr . incre_ semi_colon_
   82             | expr . decre_ semi_colon_
   84 if_stmt: if_ expr . block else_stmt

    incre_       shift, and go to state 148
    decre_       shift, and go to state 149
    lcbrac_      shift, and go to state 35
    semi_colon_  shift, and go to state 150

    block  go to state 163


State 136

   78 return_stmt: return_ expr . semi_colon_

    semi_colon_  shift, and go to state 164


State 137

   99 opt_simple_stmt: simple_stmt .
  102 expr_switch_stmt: switch_ simple_stmt . opt_expr lcbrac_ expr_case_clause rcbrac_

    float_lit_  shift, and go to state 61

    lcbrac_   reduce using rule 96 (opt_expr)
    $default  reduce using rule 99 (opt_simple_stmt)

    opt_expr  go to state 165
    expr      go to state 166


State 138

  103 expr_switch_stmt: switch_ opt_expr . lcbrac_ expr_case_clause rcbrac_

    lcbrac_  shift, and go to state 167


State 139

  106 type_switch_stmt: switch_ opt_simple_stmt . type_switch_guard lcbrac_ type_case_clause_l rrbrac_

    string_lit_  shift, and go to state 168
    id_          shift, and go to state 169

    type_switch_guard  go to state 170
    primary_expr       go to state 171


State 140

   73 simple_stmt: expr . semi_colon_
   81 inc_dec_stmt: expr . incre_ semi_colon_
   82             | expr . decre_ semi_colon_
   97 opt_expr: expr .

    incre_       shift, and go to state 148
    decre_       shift, and go to state 149
    semi_colon_  shift, and go to state 150

    $default  reduce using rule 97 (opt_expr)


State 141

   70 labeled_stmt: id_ colon_ . statement

    break_        shift, and go to state 81
    continue_     shift, and go to state 82
    defer_        shift, and go to state 83
    fallthrough_  shift, and go to state 84
    for_          shift, and go to state 85
    goto_         shift, and go to state 86
    if_           shift, and go to state 87
    return_       shift, and go to state 88
    switch_       shift, and go to state 89
    type_         shift, and go to state 3
    var_          shift, and go to state 4
    lcbrac_       shift, and go to state 35
    float_lit_    shift, and go to state 61
    rune_lit_     shift, and go to state 91
    id_           shift, and go to state 92

    id_list           go to state 93
    block             go to state 94
    decl              go to state 95
    var_decl          go to state 11
    short_var_decl    go to state 96
    type_decl         go to state 12
    statement         go to state 172
    labeled_stmt      go to state 98
    break_stmt        go to state 99
    simple_stmt       go to state 100
    goto_stmt         go to state 101
    continue_stmt     go to state 102
    return_stmt       go to state 103
    assignment        go to state 104
    inc_dec_stmt      go to state 105
    if_stmt           go to state 106
    for_stmt          go to state 107
    switch_stmt       go to state 108
    expr_switch_stmt  go to state 109
    type_switch_stmt  go to state 110
    expr_list         go to state 111
    expr              go to state 112


State 142

   27 short_var_decl: id_list decla_ . expr_list

    rune_lit_  shift, and go to state 91

    expr_list  go to state 173


State 143

   72 simple_stmt: short_var_decl semi_colon_ .

    $default  reduce using rule 72 (simple_stmt)


State 144

   75 simple_stmt: assignment semi_colon_ .

    $default  reduce using rule 75 (simple_stmt)


State 145

   74 simple_stmt: inc_dec_stmt semi_colon_ .

    $default  reduce using rule 74 (simple_stmt)


State 146

   79 assignment: expr_list add_ . eq_ expr_list semi_colon_

    eq_  shift, and go to state 174


State 147

   80 assignment: expr_list mult_ . eq_ expr_list semi_colon_

    eq_  shift, and go to state 175


State 148

   81 inc_dec_stmt: expr incre_ . semi_colon_

    semi_colon_  shift, and go to state 176


State 149

   82 inc_dec_stmt: expr decre_ . semi_colon_

    semi_colon_  shift, and go to state 177


State 150

   73 simple_stmt: expr semi_colon_ .

    $default  reduce using rule 73 (simple_stmt)


State 151

   54 func_type: func_ id_ lrbrac_ func_decl_list rrbrac_ type .

    $default  reduce using rule 54 (func_type)


State 152

   18 func_decl_list: func_decl_list comma_ type_spec .

    $default  reduce using rule 18 (func_decl_list)


State 153

   77 continue_stmt: continue_ id_ semi_colon_ .

    $default  reduce using rule 77 (continue_stmt)


State 154

   93 range_clause: range_ expr .

    $default  reduce using rule 93 (range_clause)


State 155

   27 short_var_decl: id_list decla_ . expr_list
   95 range_clause: id_list decla_ . range_ expr

    range_     shift, and go to state 178
    rune_lit_  shift, and go to state 91

    expr_list  go to state 173


State 156

   88 for_stmt: for_ for_clause block .

    $default  reduce using rule 88 (for_stmt)


State 157

   90 for_stmt: for_ range_clause block .

    $default  reduce using rule 90 (for_stmt)


State 158

   92 for_clause: opt_simple_stmt semi_colon_ . opt_expr semi_colon_ opt_simple_stmt

    float_lit_  shift, and go to state 61

    $default  reduce using rule 96 (opt_expr)

    opt_expr  go to state 179
    expr      go to state 166


State 159

   94 range_clause: expr_list eq_ . range_ expr

    range_  shift, and go to state 180


State 160

   89 for_stmt: for_ expr block .

    $default  reduce using rule 89 (for_stmt)


State 161

   76 goto_stmt: goto_ id_ semi_colon_ .

    $default  reduce using rule 76 (goto_stmt)


State 162

   83 if_stmt: if_ simple_stmt line_end . expr block else_stmt

    float_lit_  shift, and go to state 61

    expr  go to state 181


State 163

   84 if_stmt: if_ expr block . else_stmt

    else_  shift, and go to state 182

    $default  reduce using rule 85 (else_stmt)

    else_stmt  go to state 183


State 164

   78 return_stmt: return_ expr semi_colon_ .

    $default  reduce using rule 78 (return_stmt)


State 165

  102 expr_switch_stmt: switch_ simple_stmt opt_expr . lcbrac_ expr_case_clause rcbrac_

    lcbrac_  shift, and go to state 184


State 166

   97 opt_expr: expr .

    $default  reduce using rule 97 (opt_expr)


State 167

  103 expr_switch_stmt: switch_ opt_expr lcbrac_ . expr_case_clause rcbrac_

    case_     shift, and go to state 185
    default_  shift, and go to state 186

    expr_case_clause  go to state 187


State 168

  118 primary_expr: string_lit_ .

    $default  reduce using rule 118 (primary_expr)


State 169

  107 type_switch_guard: id_ . decla_ primary_expr dot_ lrbrac_ type_ rrbrac_

    decla_  shift, and go to state 188


State 170

  106 type_switch_stmt: switch_ opt_simple_stmt type_switch_guard . lcbrac_ type_case_clause_l rrbrac_

    lcbrac_  shift, and go to state 189


State 171

  108 type_switch_guard: primary_expr . dot_ lrbrac_ type_ rrbrac_

    dot_  shift, and go to state 190


State 172

   70 labeled_stmt: id_ colon_ statement .

    $default  reduce using rule 70 (labeled_stmt)


State 173

   27 short_var_decl: id_list decla_ expr_list .

    $default  reduce using rule 27 (short_var_decl)


State 174

   79 assignment: expr_list add_ eq_ . expr_list semi_colon_

    rune_lit_  shift, and go to state 91

    expr_list  go to state 191


State 175

   80 assignment: expr_list mult_ eq_ . expr_list semi_colon_

    rune_lit_  shift, and go to state 91

    expr_list  go to state 192


State 176

   81 inc_dec_stmt: expr incre_ semi_colon_ .

    $default  reduce using rule 81 (inc_dec_stmt)


State 177

   82 inc_dec_stmt: expr decre_ semi_colon_ .

    $default  reduce using rule 82 (inc_dec_stmt)


State 178

   95 range_clause: id_list decla_ range_ . expr

    float_lit_  shift, and go to state 61

    expr  go to state 193


State 179

   92 for_clause: opt_simple_stmt semi_colon_ opt_expr . semi_colon_ opt_simple_stmt

    semi_colon_  shift, and go to state 194


State 180

   94 range_clause: expr_list eq_ range_ . expr

    float_lit_  shift, and go to state 61

    expr  go to state 195


State 181

   83 if_stmt: if_ simple_stmt line_end expr . block else_stmt

    lcbrac_  shift, and go to state 35

    block  go to state 196


State 182

   86 else_stmt: else_ . if_stmt
   87          | else_ . block

    if_      shift, and go to state 87
    lcbrac_  shift, and go to state 35

    block    go to state 197
    if_stmt  go to state 198


State 183

   84 if_stmt: if_ expr block else_stmt .

    $default  reduce using rule 84 (if_stmt)


State 184

  102 expr_switch_stmt: switch_ simple_stmt opt_expr lcbrac_ . expr_case_clause rcbrac_

    case_     shift, and go to state 185
    default_  shift, and go to state 186

    expr_case_clause  go to state 199


State 185

  104 expr_case_clause: case_ . expr_list colon_ statement_list

    rune_lit_  shift, and go to state 91

    expr_list  go to state 200


State 186

  105 expr_case_clause: default_ . colon_ statement_list

    colon_  shift, and go to state 201


State 187

  103 expr_switch_stmt: switch_ opt_expr lcbrac_ expr_case_clause . rcbrac_

    rcbrac_  shift, and go to state 202


State 188

  107 type_switch_guard: id_ decla_ . primary_expr dot_ lrbrac_ type_ rrbrac_

    string_lit_  shift, and go to state 168

    primary_expr  go to state 203


State 189

  106 type_switch_stmt: switch_ opt_simple_stmt type_switch_guard lcbrac_ . type_case_clause_l rrbrac_

    case_     shift, and go to state 204
    default_  shift, and go to state 205

    $default  reduce using rule 110 (type_case_clause_l)

    type_case_clause_l  go to state 206
    type_case_clause    go to state 207
    type_switch_case    go to state 208


State 190

  108 type_switch_guard: primary_expr dot_ . lrbrac_ type_ rrbrac_

    lrbrac_  shift, and go to state 209


State 191

   79 assignment: expr_list add_ eq_ expr_list . semi_colon_

    semi_colon_  shift, and go to state 210


State 192

   80 assignment: expr_list mult_ eq_ expr_list . semi_colon_

    semi_colon_  shift, and go to state 211


State 193

   95 range_clause: id_list decla_ range_ expr .

    $default  reduce using rule 95 (range_clause)


State 194

   92 for_clause: opt_simple_stmt semi_colon_ opt_expr semi_colon_ . opt_simple_stmt

    float_lit_  shift, and go to state 61
    rune_lit_   shift, and go to state 91
    id_         shift, and go to state 20

    $default  reduce using rule 98 (opt_simple_stmt)

    id_list          go to state 93
    short_var_decl   go to state 96
    simple_stmt      go to state 127
    assignment       go to state 104
    inc_dec_stmt     go to state 105
    opt_simple_stmt  go to state 212
    expr_list        go to state 111
    expr             go to state 112


State 195

   94 range_clause: expr_list eq_ range_ expr .

    $default  reduce using rule 94 (range_clause)


State 196

   83 if_stmt: if_ simple_stmt line_end expr block . else_stmt

    else_  shift, and go to state 182

    $default  reduce using rule 85 (else_stmt)

    else_stmt  go to state 213


State 197

   87 else_stmt: else_ block .

    $default  reduce using rule 87 (else_stmt)


State 198

   86 else_stmt: else_ if_stmt .

    $default  reduce using rule 86 (else_stmt)


State 199

  102 expr_switch_stmt: switch_ simple_stmt opt_expr lcbrac_ expr_case_clause . rcbrac_

    rcbrac_  shift, and go to state 214


State 200

  104 expr_case_clause: case_ expr_list . colon_ statement_list

    colon_  shift, and go to state 215


State 201

  105 expr_case_clause: default_ colon_ . statement_list

    $default  reduce using rule 56 (statement_list)

    statement_list  go to state 216


State 202

  103 expr_switch_stmt: switch_ opt_expr lcbrac_ expr_case_clause rcbrac_ .

    $default  reduce using rule 103 (expr_switch_stmt)


State 203

  107 type_switch_guard: id_ decla_ primary_expr . dot_ lrbrac_ type_ rrbrac_

    dot_  shift, and go to state 217


State 204

  112 type_switch_case: case_ . type_list

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 218
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45
    type_list       go to state 219


State 205

  113 type_switch_case: default_ .

    $default  reduce using rule 113 (type_switch_case)


State 206

  106 type_switch_stmt: switch_ opt_simple_stmt type_switch_guard lcbrac_ type_case_clause_l . rrbrac_

    rrbrac_  shift, and go to state 220


State 207

  109 type_case_clause_l: type_case_clause . type_case_clause_l

    case_     shift, and go to state 204
    default_  shift, and go to state 205

    $default  reduce using rule 110 (type_case_clause_l)

    type_case_clause_l  go to state 221
    type_case_clause    go to state 207
    type_switch_case    go to state 208


State 208

  111 type_case_clause: type_switch_case . colon_ statement_list

    colon_  shift, and go to state 222


State 209

  108 type_switch_guard: primary_expr dot_ lrbrac_ . type_ rrbrac_

    type_  shift, and go to state 223


State 210

   79 assignment: expr_list add_ eq_ expr_list semi_colon_ .

    $default  reduce using rule 79 (assignment)


State 211

   80 assignment: expr_list mult_ eq_ expr_list semi_colon_ .

    $default  reduce using rule 80 (assignment)


State 212

   92 for_clause: opt_simple_stmt semi_colon_ opt_expr semi_colon_ opt_simple_stmt .

    $default  reduce using rule 92 (for_clause)


State 213

   83 if_stmt: if_ simple_stmt line_end expr block else_stmt .

    $default  reduce using rule 83 (if_stmt)


State 214

  102 expr_switch_stmt: switch_ simple_stmt opt_expr lcbrac_ expr_case_clause rcbrac_ .

    $default  reduce using rule 102 (expr_switch_stmt)


State 215

  104 expr_case_clause: case_ expr_list colon_ . statement_list

    $default  reduce using rule 56 (statement_list)

    statement_list  go to state 224


State 216

   55 statement_list: statement_list . statement
  105 expr_case_clause: default_ colon_ statement_list .

    break_        shift, and go to state 81
    continue_     shift, and go to state 82
    defer_        shift, and go to state 83
    fallthrough_  shift, and go to state 84
    for_          shift, and go to state 85
    goto_         shift, and go to state 86
    if_           shift, and go to state 87
    return_       shift, and go to state 88
    switch_       shift, and go to state 89
    type_         shift, and go to state 3
    var_          shift, and go to state 4
    lcbrac_       shift, and go to state 35
    float_lit_    shift, and go to state 61
    rune_lit_     shift, and go to state 91
    id_           shift, and go to state 92

    $default  reduce using rule 105 (expr_case_clause)

    id_list           go to state 93
    block             go to state 94
    decl              go to state 95
    var_decl          go to state 11
    short_var_decl    go to state 96
    type_decl         go to state 12
    statement         go to state 97
    labeled_stmt      go to state 98
    break_stmt        go to state 99
    simple_stmt       go to state 100
    goto_stmt         go to state 101
    continue_stmt     go to state 102
    return_stmt       go to state 103
    assignment        go to state 104
    inc_dec_stmt      go to state 105
    if_stmt           go to state 106
    for_stmt          go to state 107
    switch_stmt       go to state 108
    expr_switch_stmt  go to state 109
    type_switch_stmt  go to state 110
    expr_list         go to state 111
    expr              go to state 112


State 217

  107 type_switch_guard: id_ decla_ primary_expr dot_ . lrbrac_ type_ rrbrac_

    lrbrac_  shift, and go to state 225


State 218

  115 type_list: type .

    $default  reduce using rule 115 (type_list)


State 219

  112 type_switch_case: case_ type_list .
  114 type_list: type_list . comma_ type

    comma_  shift, and go to state 226

    $default  reduce using rule 112 (type_switch_case)


State 220

  106 type_switch_stmt: switch_ opt_simple_stmt type_switch_guard lcbrac_ type_case_clause_l rrbrac_ .

    $default  reduce using rule 106 (type_switch_stmt)


State 221

  109 type_case_clause_l: type_case_clause type_case_clause_l .

    $default  reduce using rule 109 (type_case_clause_l)


State 222

  111 type_case_clause: type_switch_case colon_ . statement_list

    $default  reduce using rule 56 (statement_list)

    statement_list  go to state 227


State 223

  108 type_switch_guard: primary_expr dot_ lrbrac_ type_ . rrbrac_

    rrbrac_  shift, and go to state 228


State 224

   55 statement_list: statement_list . statement
  104 expr_case_clause: case_ expr_list colon_ statement_list .

    break_        shift, and go to state 81
    continue_     shift, and go to state 82
    defer_        shift, and go to state 83
    fallthrough_  shift, and go to state 84
    for_          shift, and go to state 85
    goto_         shift, and go to state 86
    if_           shift, and go to state 87
    return_       shift, and go to state 88
    switch_       shift, and go to state 89
    type_         shift, and go to state 3
    var_          shift, and go to state 4
    lcbrac_       shift, and go to state 35
    float_lit_    shift, and go to state 61
    rune_lit_     shift, and go to state 91
    id_           shift, and go to state 92

    $default  reduce using rule 104 (expr_case_clause)

    id_list           go to state 93
    block             go to state 94
    decl              go to state 95
    var_decl          go to state 11
    short_var_decl    go to state 96
    type_decl         go to state 12
    statement         go to state 97
    labeled_stmt      go to state 98
    break_stmt        go to state 99
    simple_stmt       go to state 100
    goto_stmt         go to state 101
    continue_stmt     go to state 102
    return_stmt       go to state 103
    assignment        go to state 104
    inc_dec_stmt      go to state 105
    if_stmt           go to state 106
    for_stmt          go to state 107
    switch_stmt       go to state 108
    expr_switch_stmt  go to state 109
    type_switch_stmt  go to state 110
    expr_list         go to state 111
    expr              go to state 112


State 225

  107 type_switch_guard: id_ decla_ primary_expr dot_ lrbrac_ . type_ rrbrac_

    type_  shift, and go to state 229


State 226

  114 type_list: type_list comma_ . type

    func_    shift, and go to state 1
    struct_  shift, and go to state 26
    int_     shift, and go to state 27
    float_   shift, and go to state 28
    bool_    shift, and go to state 29
    rune_    shift, and go to state 30
    string_  shift, and go to state 31
    mult_    shift, and go to state 32
    lrbrac_  shift, and go to state 33
    lsbrac_  shift, and go to state 34
    id_      shift, and go to state 36

    type            go to state 230
    type_primitive  go to state 39
    type_lit        go to state 40
    array_type      go to state 41
    struct_type     go to state 42
    pointer_type    go to state 43
    slice_type      go to state 44
    func_type       go to state 45


State 227

   55 statement_list: statement_list . statement
  111 type_case_clause: type_switch_case colon_ statement_list .

    break_        shift, and go to state 81
    continue_     shift, and go to state 82
    defer_        shift, and go to state 83
    fallthrough_  shift, and go to state 84
    for_          shift, and go to state 85
    goto_         shift, and go to state 86
    if_           shift, and go to state 87
    return_       shift, and go to state 88
    switch_       shift, and go to state 89
    type_         shift, and go to state 3
    var_          shift, and go to state 4
    lcbrac_       shift, and go to state 35
    float_lit_    shift, and go to state 61
    rune_lit_     shift, and go to state 91
    id_           shift, and go to state 92

    $default  reduce using rule 111 (type_case_clause)

    id_list           go to state 93
    block             go to state 94
    decl              go to state 95
    var_decl          go to state 11
    short_var_decl    go to state 96
    type_decl         go to state 12
    statement         go to state 97
    labeled_stmt      go to state 98
    break_stmt        go to state 99
    simple_stmt       go to state 100
    goto_stmt         go to state 101
    continue_stmt     go to state 102
    return_stmt       go to state 103
    assignment        go to state 104
    inc_dec_stmt      go to state 105
    if_stmt           go to state 106
    for_stmt          go to state 107
    switch_stmt       go to state 108
    expr_switch_stmt  go to state 109
    type_switch_stmt  go to state 110
    expr_list         go to state 111
    expr              go to state 112


State 228

  108 type_switch_guard: primary_expr dot_ lrbrac_ type_ rrbrac_ .

    $default  reduce using rule 108 (type_switch_guard)


State 229

  107 type_switch_guard: id_ decla_ primary_expr dot_ lrbrac_ type_ . rrbrac_

    rrbrac_  shift, and go to state 231


State 230

  114 type_list: type_list comma_ type .

    $default  reduce using rule 114 (type_list)


State 231

  107 type_switch_guard: id_ decla_ primary_expr dot_ lrbrac_ type_ rrbrac_ .

    $default  reduce using rule 107 (type_switch_guard)
