Nonterminals useless in grammar

   empty_rbrac
   empty_sbrac


Terminals unused in grammar

   break_
   case_
   chan_
   const_
   continue_
   default_
   defer_
   else_
   fallthrough_
   for_
   go_
   goto_
   if_
   import_
   interface_
   map_
   range_
   return_
   select_
   switch_
   print_
   println_
   append_
   add_
   minus_
   div_
   mod_
   amp_
   caret_
   ls_
   rs_
   unknown_
   add_eq_
   minus_eq_
   mult_eq_
   div_eq_
   mod_eq_
   amp_eq_
   vb_eq_
   caret_eq_
   ls_eq_
   rs_eq_
   unknown_eq_
   and_
   arrow_
   incre_
   decre_
   equality_
   lt_
   gt_
   eq_
   not_
   not_eq_
   lteq_
   gteq_
   decla_
   etc_
   colon_
   vb_
   int_lit_
   string_lit_
   rune_lit_
   new_line_
   error_
   lteq
   unary


Rules useless in grammar

   56 empty_rbrac: lrbrac_ rrbrac_

   57 empty_sbrac: lsbrac_ lsbrac_


Grammar

    0 $accept: go_prog $end

    1 line_end: semi_colon_
    2         | %empty

    3 id_list: id_
    4        | id_list id_

    5 empty_cbrac: lcbrac_ lcbrac_

    6 block: empty_cbrac

    7 go_prog: pckg_decl top_decl_list
    8        | top_decl_list
    9        | %empty

   10 pckg_decl: package_ id_ line_end

   11 top_decl_list: top_decl line_end
   12              | top_decl_list top_decl line_end

   13 top_decl: decl
   14         | func_decl

   15 decl: type_decl
   16     | var_decl

   17 func_decl: func_ id_ lrbrac_ func_decl_list rrbrac_ type block
   18          | func_ id_ lrbrac_ func_decl_list rrbrac_ block

   19 func_decl_list: type_spec
   20               | func_decl_list comma_ type_spec

   21 var_decl: var_ var_decl_one_line
   22         | var_ lrbrac_ var_decl_mult_line rrbrac_

   23 var_decl_mult_line: var_decl_one_line
   24                   | var_decl_mult_line var_decl_one_line

   25 var_decl_one_line: id_list type
   26                  | id_list expr
   27                  | id_list type expr

   28 type_decl: type_ type_spec
   29          | type_ lrbrac_ type_spec_list rrbrac_

   30 type_spec_list: type_spec
   31               | type_spec_list type_spec

   32 type_spec: id_ type

   33 type: type_primitive
   34     | type_lit
   35     | id_ dot_ id_
   36     | lrbrac_ type rrbrac_

   37 type_primitive: bool_
   38               | rune_
   39               | string_
   40               | float_
   41               | int_

   42 type_lit: array_type
   43         | struct_type
   44         | pointer_type
   45         | func_type
   46         | slice_type

   47 array_type: lsbrac_ expr rsbrac_ type

   48 struct_type: struct_ lcbrac_ field_decl_list rcbrac_

   49 field_decl_list: field_decl
   50                | field_decl_list field_decl

   51 field_decl: id_list type

   52 pointer_type: mult_ type

   53 slice_type: lsbrac_ rsbrac_ type

   54 func_type: or_

   55 expr: float_lit_


Terminals, with rules where they appear

$end (0) 0
error (256)
break_ (258)
case_ (259)
chan_ (260)
const_ (261)
continue_ (262)
default_ (263)
defer_ (264)
else_ (265)
fallthrough_ (266)
for_ (267)
func_ (268) 17 18
go_ (269)
goto_ (270)
if_ (271)
import_ (272)
interface_ (273)
map_ (274)
package_ (275) 10
range_ (276)
return_ (277)
select_ (278)
struct_ (279) 48
switch_ (280)
type_ (281) 28 29
var_ (282) 21 22
int_ (283) 41
float_ (284) 40
bool_ (285) 37
rune_ (286) 38
string_ (287) 39
print_ (288)
println_ (289)
append_ (290)
add_ (291)
minus_ (292)
mult_ (293) 52
div_ (294)
mod_ (295)
amp_ (296)
caret_ (297)
ls_ (298)
rs_ (299)
unknown_ (300)
add_eq_ (301)
minus_eq_ (302)
mult_eq_ (303)
div_eq_ (304)
mod_eq_ (305)
amp_eq_ (306)
vb_eq_ (307)
caret_eq_ (308)
ls_eq_ (309)
rs_eq_ (310)
unknown_eq_ (311)
and_ (312)
or_ (313) 54
arrow_ (314)
incre_ (315)
decre_ (316)
equality_ (317)
lt_ (318)
gt_ (319)
eq_ (320)
not_ (321)
not_eq_ (322)
lteq_ (323)
gteq_ (324)
decla_ (325)
etc_ (326)
lrbrac_ (327) 17 18 22 29 36
rrbrac_ (328) 17 18 22 29 36
lsbrac_ (329) 47 53
rsbrac_ (330) 47 53
lcbrac_ (331) 5 48
rcbrac_ (332) 48
comma_ (333) 20
dot_ (334) 35
colon_ (335)
vb_ (336)
int_lit_ (337)
float_lit_ (338) 55
string_lit_ (339)
rune_lit_ (340)
semi_colon_ (341) 1
id_ (342) 3 4 10 17 18 32 35
new_line_ (343)
error_ (344)
lteq (345)
unary (346)


Nonterminals, with rules where they appear

$accept (92)
    on left: 0
line_end (93)
    on left: 1 2, on right: 10 11 12
id_list (94)
    on left: 3 4, on right: 4 25 26 27 51
empty_cbrac (95)
    on left: 5, on right: 6
block (96)
    on left: 6, on right: 17 18
go_prog (97)
    on left: 7 8 9, on right: 0
pckg_decl (98)
    on left: 10, on right: 7
top_decl_list (99)
    on left: 11 12, on right: 7 8 12
top_decl (100)
    on left: 13 14, on right: 11 12
decl (101)
    on left: 15 16, on right: 13
func_decl (102)
    on left: 17 18, on right: 14
func_decl_list (103)
    on left: 19 20, on right: 17 18 20
var_decl (104)
    on left: 21 22, on right: 16
var_decl_mult_line (105)
    on left: 23 24, on right: 22 24
var_decl_one_line (106)
    on left: 25 26 27, on right: 21 23 24
type_decl (107)
    on left: 28 29, on right: 15
type_spec_list (108)
    on left: 30 31, on right: 29 31
type_spec (109)
    on left: 32, on right: 19 20 28 30 31
type (110)
    on left: 33 34 35 36, on right: 17 25 27 32 36 47 51 52 53
type_primitive (111)
    on left: 37 38 39 40 41, on right: 33
type_lit (112)
    on left: 42 43 44 45 46, on right: 34
array_type (113)
    on left: 47, on right: 42
struct_type (114)
    on left: 48, on right: 43
field_decl_list (115)
    on left: 49 50, on right: 48 50
field_decl (116)
    on left: 51, on right: 49 50
pointer_type (117)
    on left: 52, on right: 44
slice_type (118)
    on left: 53, on right: 46
func_type (119)
    on left: 54, on right: 45
expr (120)
    on left: 55, on right: 26 27 47


State 0

    0 $accept: . go_prog $end

    func_     shift, and go to state 1
    package_  shift, and go to state 2
    type_     shift, and go to state 3
    var_      shift, and go to state 4

    $default  reduce using rule 9 (go_prog)

    go_prog        go to state 5
    pckg_decl      go to state 6
    top_decl_list  go to state 7
    top_decl       go to state 8
    decl           go to state 9
    func_decl      go to state 10
    var_decl       go to state 11
    type_decl      go to state 12


State 1

   17 func_decl: func_ . id_ lrbrac_ func_decl_list rrbrac_ type block
   18          | func_ . id_ lrbrac_ func_decl_list rrbrac_ block

    id_  shift, and go to state 13


State 2

   10 pckg_decl: package_ . id_ line_end

    id_  shift, and go to state 14


State 3

   28 type_decl: type_ . type_spec
   29          | type_ . lrbrac_ type_spec_list rrbrac_

    lrbrac_  shift, and go to state 15
    id_      shift, and go to state 16

    type_spec  go to state 17


State 4

   21 var_decl: var_ . var_decl_one_line
   22         | var_ . lrbrac_ var_decl_mult_line rrbrac_

    lrbrac_  shift, and go to state 18
    id_      shift, and go to state 19

    id_list            go to state 20
    var_decl_one_line  go to state 21


State 5

    0 $accept: go_prog . $end

    $end  shift, and go to state 22


State 6

    7 go_prog: pckg_decl . top_decl_list

    func_  shift, and go to state 1
    type_  shift, and go to state 3
    var_   shift, and go to state 4

    top_decl_list  go to state 23
    top_decl       go to state 8
    decl           go to state 9
    func_decl      go to state 10
    var_decl       go to state 11
    type_decl      go to state 12


State 7

    8 go_prog: top_decl_list .
   12 top_decl_list: top_decl_list . top_decl line_end

    func_  shift, and go to state 1
    type_  shift, and go to state 3
    var_   shift, and go to state 4

    $default  reduce using rule 8 (go_prog)

    top_decl   go to state 24
    decl       go to state 9
    func_decl  go to state 10
    var_decl   go to state 11
    type_decl  go to state 12


State 8

   11 top_decl_list: top_decl . line_end

    semi_colon_  shift, and go to state 25

    $default  reduce using rule 2 (line_end)

    line_end  go to state 26


State 9

   13 top_decl: decl .

    $default  reduce using rule 13 (top_decl)


State 10

   14 top_decl: func_decl .

    $default  reduce using rule 14 (top_decl)


State 11

   16 decl: var_decl .

    $default  reduce using rule 16 (decl)


State 12

   15 decl: type_decl .

    $default  reduce using rule 15 (decl)


State 13

   17 func_decl: func_ id_ . lrbrac_ func_decl_list rrbrac_ type block
   18          | func_ id_ . lrbrac_ func_decl_list rrbrac_ block

    lrbrac_  shift, and go to state 27


State 14

   10 pckg_decl: package_ id_ . line_end

    semi_colon_  shift, and go to state 25

    $default  reduce using rule 2 (line_end)

    line_end  go to state 28


State 15

   29 type_decl: type_ lrbrac_ . type_spec_list rrbrac_

    id_  shift, and go to state 16

    type_spec_list  go to state 29
    type_spec       go to state 30


State 16

   32 type_spec: id_ . type

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    id_      shift, and go to state 41

    type            go to state 42
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 17

   28 type_decl: type_ type_spec .

    $default  reduce using rule 28 (type_decl)


State 18

   22 var_decl: var_ lrbrac_ . var_decl_mult_line rrbrac_

    id_  shift, and go to state 19

    id_list             go to state 20
    var_decl_mult_line  go to state 50
    var_decl_one_line   go to state 51


State 19

    3 id_list: id_ .

    $default  reduce using rule 3 (id_list)


State 20

    4 id_list: id_list . id_
   25 var_decl_one_line: id_list . type
   26                  | id_list . expr
   27                  | id_list . type expr

    struct_     shift, and go to state 31
    int_        shift, and go to state 32
    float_      shift, and go to state 33
    bool_       shift, and go to state 34
    rune_       shift, and go to state 35
    string_     shift, and go to state 36
    mult_       shift, and go to state 37
    or_         shift, and go to state 38
    lrbrac_     shift, and go to state 39
    lsbrac_     shift, and go to state 40
    float_lit_  shift, and go to state 52
    id_         shift, and go to state 53

    type            go to state 54
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49
    expr            go to state 55


State 21

   21 var_decl: var_ var_decl_one_line .

    $default  reduce using rule 21 (var_decl)


State 22

    0 $accept: go_prog $end .

    $default  accept


State 23

    7 go_prog: pckg_decl top_decl_list .
   12 top_decl_list: top_decl_list . top_decl line_end

    func_  shift, and go to state 1
    type_  shift, and go to state 3
    var_   shift, and go to state 4

    $default  reduce using rule 7 (go_prog)

    top_decl   go to state 24
    decl       go to state 9
    func_decl  go to state 10
    var_decl   go to state 11
    type_decl  go to state 12


State 24

   12 top_decl_list: top_decl_list top_decl . line_end

    semi_colon_  shift, and go to state 25

    $default  reduce using rule 2 (line_end)

    line_end  go to state 56


State 25

    1 line_end: semi_colon_ .

    $default  reduce using rule 1 (line_end)


State 26

   11 top_decl_list: top_decl line_end .

    $default  reduce using rule 11 (top_decl_list)


State 27

   17 func_decl: func_ id_ lrbrac_ . func_decl_list rrbrac_ type block
   18          | func_ id_ lrbrac_ . func_decl_list rrbrac_ block

    id_  shift, and go to state 16

    func_decl_list  go to state 57
    type_spec       go to state 58


State 28

   10 pckg_decl: package_ id_ line_end .

    $default  reduce using rule 10 (pckg_decl)


State 29

   29 type_decl: type_ lrbrac_ type_spec_list . rrbrac_
   31 type_spec_list: type_spec_list . type_spec

    rrbrac_  shift, and go to state 59
    id_      shift, and go to state 16

    type_spec  go to state 60


State 30

   30 type_spec_list: type_spec .

    $default  reduce using rule 30 (type_spec_list)


State 31

   48 struct_type: struct_ . lcbrac_ field_decl_list rcbrac_

    lcbrac_  shift, and go to state 61


State 32

   41 type_primitive: int_ .

    $default  reduce using rule 41 (type_primitive)


State 33

   40 type_primitive: float_ .

    $default  reduce using rule 40 (type_primitive)


State 34

   37 type_primitive: bool_ .

    $default  reduce using rule 37 (type_primitive)


State 35

   38 type_primitive: rune_ .

    $default  reduce using rule 38 (type_primitive)


State 36

   39 type_primitive: string_ .

    $default  reduce using rule 39 (type_primitive)


State 37

   52 pointer_type: mult_ . type

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    id_      shift, and go to state 41

    type            go to state 62
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 38

   54 func_type: or_ .

    $default  reduce using rule 54 (func_type)


State 39

   36 type: lrbrac_ . type rrbrac_

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    id_      shift, and go to state 41

    type            go to state 63
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 40

   47 array_type: lsbrac_ . expr rsbrac_ type
   53 slice_type: lsbrac_ . rsbrac_ type

    rsbrac_     shift, and go to state 64
    float_lit_  shift, and go to state 52

    expr  go to state 65


State 41

   35 type: id_ . dot_ id_

    dot_  shift, and go to state 66


State 42

   32 type_spec: id_ type .

    $default  reduce using rule 32 (type_spec)


State 43

   33 type: type_primitive .

    $default  reduce using rule 33 (type)


State 44

   34 type: type_lit .

    $default  reduce using rule 34 (type)


State 45

   42 type_lit: array_type .

    $default  reduce using rule 42 (type_lit)


State 46

   43 type_lit: struct_type .

    $default  reduce using rule 43 (type_lit)


State 47

   44 type_lit: pointer_type .

    $default  reduce using rule 44 (type_lit)


State 48

   46 type_lit: slice_type .

    $default  reduce using rule 46 (type_lit)


State 49

   45 type_lit: func_type .

    $default  reduce using rule 45 (type_lit)


State 50

   22 var_decl: var_ lrbrac_ var_decl_mult_line . rrbrac_
   24 var_decl_mult_line: var_decl_mult_line . var_decl_one_line

    rrbrac_  shift, and go to state 67
    id_      shift, and go to state 19

    id_list            go to state 20
    var_decl_one_line  go to state 68


State 51

   23 var_decl_mult_line: var_decl_one_line .

    $default  reduce using rule 23 (var_decl_mult_line)


State 52

   55 expr: float_lit_ .

    $default  reduce using rule 55 (expr)


State 53

    4 id_list: id_list id_ .
   35 type: id_ . dot_ id_

    dot_  shift, and go to state 66

    $default  reduce using rule 4 (id_list)


State 54

   25 var_decl_one_line: id_list type .
   27                  | id_list type . expr

    float_lit_  shift, and go to state 52

    $default  reduce using rule 25 (var_decl_one_line)

    expr  go to state 69


State 55

   26 var_decl_one_line: id_list expr .

    $default  reduce using rule 26 (var_decl_one_line)


State 56

   12 top_decl_list: top_decl_list top_decl line_end .

    $default  reduce using rule 12 (top_decl_list)


State 57

   17 func_decl: func_ id_ lrbrac_ func_decl_list . rrbrac_ type block
   18          | func_ id_ lrbrac_ func_decl_list . rrbrac_ block
   20 func_decl_list: func_decl_list . comma_ type_spec

    rrbrac_  shift, and go to state 70
    comma_   shift, and go to state 71


State 58

   19 func_decl_list: type_spec .

    $default  reduce using rule 19 (func_decl_list)


State 59

   29 type_decl: type_ lrbrac_ type_spec_list rrbrac_ .

    $default  reduce using rule 29 (type_decl)


State 60

   31 type_spec_list: type_spec_list type_spec .

    $default  reduce using rule 31 (type_spec_list)


State 61

   48 struct_type: struct_ lcbrac_ . field_decl_list rcbrac_

    id_  shift, and go to state 19

    id_list          go to state 72
    field_decl_list  go to state 73
    field_decl       go to state 74


State 62

   52 pointer_type: mult_ type .

    $default  reduce using rule 52 (pointer_type)


State 63

   36 type: lrbrac_ type . rrbrac_

    rrbrac_  shift, and go to state 75


State 64

   53 slice_type: lsbrac_ rsbrac_ . type

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    id_      shift, and go to state 41

    type            go to state 76
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 65

   47 array_type: lsbrac_ expr . rsbrac_ type

    rsbrac_  shift, and go to state 77


State 66

   35 type: id_ dot_ . id_

    id_  shift, and go to state 78


State 67

   22 var_decl: var_ lrbrac_ var_decl_mult_line rrbrac_ .

    $default  reduce using rule 22 (var_decl)


State 68

   24 var_decl_mult_line: var_decl_mult_line var_decl_one_line .

    $default  reduce using rule 24 (var_decl_mult_line)


State 69

   27 var_decl_one_line: id_list type expr .

    $default  reduce using rule 27 (var_decl_one_line)


State 70

   17 func_decl: func_ id_ lrbrac_ func_decl_list rrbrac_ . type block
   18          | func_ id_ lrbrac_ func_decl_list rrbrac_ . block

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    lcbrac_  shift, and go to state 79
    id_      shift, and go to state 41

    empty_cbrac     go to state 80
    block           go to state 81
    type            go to state 82
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 71

   20 func_decl_list: func_decl_list comma_ . type_spec

    id_  shift, and go to state 16

    type_spec  go to state 83


State 72

    4 id_list: id_list . id_
   51 field_decl: id_list . type

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    id_      shift, and go to state 53

    type            go to state 84
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 73

   48 struct_type: struct_ lcbrac_ field_decl_list . rcbrac_
   50 field_decl_list: field_decl_list . field_decl

    rcbrac_  shift, and go to state 85
    id_      shift, and go to state 19

    id_list     go to state 72
    field_decl  go to state 86


State 74

   49 field_decl_list: field_decl .

    $default  reduce using rule 49 (field_decl_list)


State 75

   36 type: lrbrac_ type rrbrac_ .

    $default  reduce using rule 36 (type)


State 76

   53 slice_type: lsbrac_ rsbrac_ type .

    $default  reduce using rule 53 (slice_type)


State 77

   47 array_type: lsbrac_ expr rsbrac_ . type

    struct_  shift, and go to state 31
    int_     shift, and go to state 32
    float_   shift, and go to state 33
    bool_    shift, and go to state 34
    rune_    shift, and go to state 35
    string_  shift, and go to state 36
    mult_    shift, and go to state 37
    or_      shift, and go to state 38
    lrbrac_  shift, and go to state 39
    lsbrac_  shift, and go to state 40
    id_      shift, and go to state 41

    type            go to state 87
    type_primitive  go to state 43
    type_lit        go to state 44
    array_type      go to state 45
    struct_type     go to state 46
    pointer_type    go to state 47
    slice_type      go to state 48
    func_type       go to state 49


State 78

   35 type: id_ dot_ id_ .

    $default  reduce using rule 35 (type)


State 79

    5 empty_cbrac: lcbrac_ . lcbrac_

    lcbrac_  shift, and go to state 88


State 80

    6 block: empty_cbrac .

    $default  reduce using rule 6 (block)


State 81

   18 func_decl: func_ id_ lrbrac_ func_decl_list rrbrac_ block .

    $default  reduce using rule 18 (func_decl)


State 82

   17 func_decl: func_ id_ lrbrac_ func_decl_list rrbrac_ type . block

    lcbrac_  shift, and go to state 79

    empty_cbrac  go to state 80
    block        go to state 89


State 83

   20 func_decl_list: func_decl_list comma_ type_spec .

    $default  reduce using rule 20 (func_decl_list)


State 84

   51 field_decl: id_list type .

    $default  reduce using rule 51 (field_decl)


State 85

   48 struct_type: struct_ lcbrac_ field_decl_list rcbrac_ .

    $default  reduce using rule 48 (struct_type)


State 86

   50 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 50 (field_decl_list)


State 87

   47 array_type: lsbrac_ expr rsbrac_ type .

    $default  reduce using rule 47 (array_type)


State 88

    5 empty_cbrac: lcbrac_ lcbrac_ .

    $default  reduce using rule 5 (empty_cbrac)


State 89

   17 func_decl: func_ id_ lrbrac_ func_decl_list rrbrac_ type block .

    $default  reduce using rule 17 (func_decl)
