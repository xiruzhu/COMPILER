Terminals unused in grammar

   break_
   case_
   chan_
   const_
   continue_
   default_
   defer_
   else_
   fallthrough_
   for_
   go_
   goto_
   if_
   import_
   interface_
   map_
   range_
   return_
   select_
   switch_
   var_
   print_
   println_
   append_
   add_eq_
   minus_eq_
   mult_eq_
   div_eq_
   mod_eq_
   amp_eq_
   vb_eq_
   caret_eq_
   ls_eq_
   rs_eq_
   unknown_eq_
   incre_
   decre_
   equality_
   not_
   colon_
   float_lit_
   rune_lit_
   error_
   lteq
   unary


Grammar

    0 $accept: go_prog $end

    1 go_prog: pckg_decl
    2        | pckg_decl top_level_decl
    3        | block

    4 block: lcbrac_ rcbrac_

    5 pckg_decl: package_ id_
    6          | package_ id_ pckg_decl

    7 func_decl: func_ id_ function
    8          | func_ id_ signature

    9 func_body: block

   10 function: signature func_body

   11 func_type: func_ signature

   12 signature: params
   13          | params result

   14 result: type

   15 params: lrbrac_ rrbrac_
   16       | lrbrac_ params_list rrbrac_

   17 params_list: params_decl
   18            | params_list comma_ params_decl

   19 params_decl: id_list etc_ type
   20            | etc_ type
   21            | id_list type
   22            | type

   23 id_list: id_
   24        | id_list comma_ id_

   25 type: type_name
   26     | type_lit
   27     | lrbrac_ type rrbrac_

   28 type_name: literal_type
   29          | id_ dot_ id_

   30 type_lit: array_type
   31         | struct_type
   32         | pointer_type
   33         | func_type
   34         | slice_type

   35 array_type: lsbrac_ expr rsbrac_ type

   36 struct_type: struct_ lcbrac_ field_decl_list rcbrac_

   37 field_decl_list: field_decl semi
   38                | field_decl_list field_decl semi

   39 field_decl: id_list type tag
   40           | id_list type
   41           | anon_field tag
   42           | anon_field

   43 tag: string_lit_

   44 anon_field: mult_ type_name
   45           | type_name

   46 pointer_type: mult_ base_type

   47 base_type: type

   48 slice_type: lsbrac_ rsbrac_ type

   49 semi: semi_colon_
   50     | new_line_

   51 literal_type: bool_
   52             | rune_
   53             | string_
   54             | float_
   55             | int_

   56 decl: type_decl
   57     | var_decl

   58 top_level_decl: decl
   59               | func_decl

   60 type_decl: type_ type_spec
   61          | type_ lrbrac_ type_spec_list rrbrac_

   62 type_spec: id_ type

   63 type_spec_list: type_spec
   64               | type_spec comma_ type_spec

   65 var_decl: "var" var_spec
   66         | lrbrac_ var_spec_list rrbrac_
   67         | short_var_decl

   68 var_spec: id_list eq_ expr_list
   69         | id_list type eq_ expr_list
   70         | id_list type

   71 var_spec_list: var_spec
   72              | var_spec_list semi_colon_ var_spec

   73 short_var_decl: id_list decla_ expr_list

   74 expr_list: expr
   75          | expr_list comma_ expr

   76 expr: unary_expr
   77     | expr binary_op unary_expr

   78 unary_expr: primary_expr
   79           | unary_op unary_expr

   80 binary_op: or_
   81          | and_
   82          | rel_op
   83          | add_op
   84          | mul_op

   85 rel_op: eq_
   86       | not_eq_
   87       | lt_
   88       | lteq_
   89       | gt_
   90       | gteq_

   91 add_op: add_
   92       | minus_
   93       | vb_
   94       | caret_

   95 mul_op: mult_
   96       | div_
   97       | mod_
   98       | ls_
   99       | rs_
  100       | amp_
  101       | unknown_

  102 unary_op: add_
  103         | minus_
  104         | vb_
  105         | caret_
  106         | mult_
  107         | amp_
  108         | arrow_

  109 primary_expr: int_lit_


Terminals, with rules where they appear

$end (0) 0
error (256)
break_ (258)
case_ (259)
chan_ (260)
const_ (261)
continue_ (262)
default_ (263)
defer_ (264)
else_ (265)
fallthrough_ (266)
for_ (267)
func_ (268) 7 8 11
go_ (269)
goto_ (270)
if_ (271)
import_ (272)
interface_ (273)
map_ (274)
package_ (275) 5 6
range_ (276)
return_ (277)
select_ (278)
struct_ (279) 36
switch_ (280)
type_ (281) 60 61
var_ (282)
int_ (283) 55
float_ (284) 54
bool_ (285) 51
rune_ (286) 52
string_ (287) 53
print_ (288)
println_ (289)
append_ (290)
add_ (291) 91 102
minus_ (292) 92 103
mult_ (293) 44 46 95 106
div_ (294) 96
mod_ (295) 97
amp_ (296) 100 107
caret_ (297) 94 105
ls_ (298) 98
rs_ (299) 99
unknown_ (300) 101
add_eq_ (301)
minus_eq_ (302)
mult_eq_ (303)
div_eq_ (304)
mod_eq_ (305)
amp_eq_ (306)
vb_eq_ (307)
caret_eq_ (308)
ls_eq_ (309)
rs_eq_ (310)
unknown_eq_ (311)
and_ (312) 81
or_ (313) 80
arrow_ (314) 108
incre_ (315)
decre_ (316)
equality_ (317)
lt_ (318) 87
gt_ (319) 89
eq_ (320) 68 69 85
not_ (321)
not_eq_ (322) 86
lteq_ (323) 88
gteq_ (324) 90
decla_ (325) 73
etc_ (326) 19 20
lrbrac_ (327) 15 16 27 61 66
rrbrac_ (328) 15 16 27 61 66
lsbrac_ (329) 35 48
rsbrac_ (330) 35 48
lcbrac_ (331) 4 36
rcbrac_ (332) 4 36
comma_ (333) 18 24 64 75
dot_ (334) 29
colon_ (335)
vb_ (336) 93 104
int_lit_ (337) 109
float_lit_ (338)
string_lit_ (339) 43
rune_lit_ (340)
semi_colon_ (341) 49 72
id_ (342) 5 6 7 8 23 24 29 62
new_line_ (343) 50
error_ (344)
lteq (345)
unary (346)
"var" (347) 65


Nonterminals, with rules where they appear

$accept (93)
    on left: 0
go_prog (94)
    on left: 1 2 3, on right: 0
block (95)
    on left: 4, on right: 3 9
pckg_decl (96)
    on left: 5 6, on right: 1 2 6
func_decl (97)
    on left: 7 8, on right: 59
func_body (98)
    on left: 9, on right: 10
function (99)
    on left: 10, on right: 7
func_type (100)
    on left: 11, on right: 33
signature (101)
    on left: 12 13, on right: 8 10 11
result (102)
    on left: 14, on right: 13
params (103)
    on left: 15 16, on right: 12 13
params_list (104)
    on left: 17 18, on right: 16 18
params_decl (105)
    on left: 19 20 21 22, on right: 17 18
id_list (106)
    on left: 23 24, on right: 19 21 24 39 40 68 69 70 73
type (107)
    on left: 25 26 27, on right: 14 19 20 21 22 27 35 39 40 47 48 62
    69 70
type_name (108)
    on left: 28 29, on right: 25 44 45
type_lit (109)
    on left: 30 31 32 33 34, on right: 26
array_type (110)
    on left: 35, on right: 30
struct_type (111)
    on left: 36, on right: 31
field_decl_list (112)
    on left: 37 38, on right: 36 38
field_decl (113)
    on left: 39 40 41 42, on right: 37 38
tag (114)
    on left: 43, on right: 39 41
anon_field (115)
    on left: 44 45, on right: 41 42
pointer_type (116)
    on left: 46, on right: 32
base_type (117)
    on left: 47, on right: 46
slice_type (118)
    on left: 48, on right: 34
semi (119)
    on left: 49 50, on right: 37 38
literal_type (120)
    on left: 51 52 53 54 55, on right: 28
decl (121)
    on left: 56 57, on right: 58
top_level_decl (122)
    on left: 58 59, on right: 2
type_decl (123)
    on left: 60 61, on right: 56
type_spec (124)
    on left: 62, on right: 60 63 64
type_spec_list (125)
    on left: 63 64, on right: 61
var_decl (126)
    on left: 65 66 67, on right: 57
var_spec (127)
    on left: 68 69 70, on right: 65 71 72
var_spec_list (128)
    on left: 71 72, on right: 66 72
short_var_decl (129)
    on left: 73, on right: 67
expr_list (130)
    on left: 74 75, on right: 68 69 73 75
expr (131)
    on left: 76 77, on right: 35 74 75 77
unary_expr (132)
    on left: 78 79, on right: 76 77 79
binary_op (133)
    on left: 80 81 82 83 84, on right: 77
rel_op (134)
    on left: 85 86 87 88 89 90, on right: 82
add_op (135)
    on left: 91 92 93 94, on right: 83
mul_op (136)
    on left: 95 96 97 98 99 100 101, on right: 84
unary_op (137)
    on left: 102 103 104 105 106 107 108, on right: 79
primary_expr (138)
    on left: 109, on right: 78


State 0

    0 $accept: . go_prog $end

    package_  shift, and go to state 1
    lcbrac_   shift, and go to state 2

    go_prog    go to state 3
    block      go to state 4
    pckg_decl  go to state 5


State 1

    5 pckg_decl: package_ . id_
    6          | package_ . id_ pckg_decl

    id_  shift, and go to state 6


State 2

    4 block: lcbrac_ . rcbrac_

    rcbrac_  shift, and go to state 7


State 3

    0 $accept: go_prog . $end

    $end  shift, and go to state 8


State 4

    3 go_prog: block .

    $default  reduce using rule 3 (go_prog)


State 5

    1 go_prog: pckg_decl .
    2        | pckg_decl . top_level_decl

    func_    shift, and go to state 9
    type_    shift, and go to state 10
    lrbrac_  shift, and go to state 11
    id_      shift, and go to state 12
    "var"    shift, and go to state 13

    $default  reduce using rule 1 (go_prog)

    func_decl       go to state 14
    id_list         go to state 15
    decl            go to state 16
    top_level_decl  go to state 17
    type_decl       go to state 18
    var_decl        go to state 19
    short_var_decl  go to state 20


State 6

    5 pckg_decl: package_ id_ .
    6          | package_ id_ . pckg_decl

    package_  shift, and go to state 1

    $default  reduce using rule 5 (pckg_decl)

    pckg_decl  go to state 21


State 7

    4 block: lcbrac_ rcbrac_ .

    $default  reduce using rule 4 (block)


State 8

    0 $accept: go_prog $end .

    $default  accept


State 9

    7 func_decl: func_ . id_ function
    8          | func_ . id_ signature

    id_  shift, and go to state 22


State 10

   60 type_decl: type_ . type_spec
   61          | type_ . lrbrac_ type_spec_list rrbrac_

    lrbrac_  shift, and go to state 23
    id_      shift, and go to state 24

    type_spec  go to state 25


State 11

   66 var_decl: lrbrac_ . var_spec_list rrbrac_

    id_  shift, and go to state 12

    id_list        go to state 26
    var_spec       go to state 27
    var_spec_list  go to state 28


State 12

   23 id_list: id_ .

    $default  reduce using rule 23 (id_list)


State 13

   65 var_decl: "var" . var_spec

    id_  shift, and go to state 12

    id_list   go to state 26
    var_spec  go to state 29


State 14

   59 top_level_decl: func_decl .

    $default  reduce using rule 59 (top_level_decl)


State 15

   24 id_list: id_list . comma_ id_
   73 short_var_decl: id_list . decla_ expr_list

    decla_  shift, and go to state 30
    comma_  shift, and go to state 31


State 16

   58 top_level_decl: decl .

    $default  reduce using rule 58 (top_level_decl)


State 17

    2 go_prog: pckg_decl top_level_decl .

    $default  reduce using rule 2 (go_prog)


State 18

   56 decl: type_decl .

    $default  reduce using rule 56 (decl)


State 19

   57 decl: var_decl .

    $default  reduce using rule 57 (decl)


State 20

   67 var_decl: short_var_decl .

    $default  reduce using rule 67 (var_decl)


State 21

    6 pckg_decl: package_ id_ pckg_decl .

    $default  reduce using rule 6 (pckg_decl)


State 22

    7 func_decl: func_ id_ . function
    8          | func_ id_ . signature

    lrbrac_  shift, and go to state 32

    function   go to state 33
    signature  go to state 34
    params     go to state 35


State 23

   61 type_decl: type_ lrbrac_ . type_spec_list rrbrac_

    id_  shift, and go to state 24

    type_spec       go to state 36
    type_spec_list  go to state 37


State 24

   62 type_spec: id_ . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 50
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 25

   60 type_decl: type_ type_spec .

    $default  reduce using rule 60 (type_decl)


State 26

   24 id_list: id_list . comma_ id_
   68 var_spec: id_list . eq_ expr_list
   69         | id_list . type eq_ expr_list
   70         | id_list . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    eq_      shift, and go to state 58
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    comma_   shift, and go to state 31
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 59
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 27

   71 var_spec_list: var_spec .

    $default  reduce using rule 71 (var_spec_list)


State 28

   66 var_decl: lrbrac_ var_spec_list . rrbrac_
   72 var_spec_list: var_spec_list . semi_colon_ var_spec

    rrbrac_      shift, and go to state 60
    semi_colon_  shift, and go to state 61


State 29

   65 var_decl: "var" var_spec .

    $default  reduce using rule 65 (var_decl)


State 30

   73 short_var_decl: id_list decla_ . expr_list

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    expr_list     go to state 70
    expr          go to state 71
    unary_expr    go to state 72
    unary_op      go to state 73
    primary_expr  go to state 74


State 31

   24 id_list: id_list comma_ . id_

    id_  shift, and go to state 75


State 32

   15 params: lrbrac_ . rrbrac_
   16       | lrbrac_ . params_list rrbrac_

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    etc_     shift, and go to state 76
    lrbrac_  shift, and go to state 46
    rrbrac_  shift, and go to state 77
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 78

    func_type     go to state 49
    params_list   go to state 79
    params_decl   go to state 80
    id_list       go to state 81
    type          go to state 82
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 33

    7 func_decl: func_ id_ function .

    $default  reduce using rule 7 (func_decl)


State 34

    8 func_decl: func_ id_ signature .
   10 function: signature . func_body

    lcbrac_  shift, and go to state 2

    $default  reduce using rule 8 (func_decl)

    block      go to state 83
    func_body  go to state 84


State 35

   12 signature: params .
   13          | params . result

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    $default  reduce using rule 12 (signature)

    func_type     go to state 49
    result        go to state 85
    type          go to state 86
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 36

   63 type_spec_list: type_spec .
   64               | type_spec . comma_ type_spec

    comma_  shift, and go to state 87

    $default  reduce using rule 63 (type_spec_list)


State 37

   61 type_decl: type_ lrbrac_ type_spec_list . rrbrac_

    rrbrac_  shift, and go to state 88


State 38

   11 func_type: func_ . signature

    lrbrac_  shift, and go to state 32

    signature  go to state 89
    params     go to state 35


State 39

   36 struct_type: struct_ . lcbrac_ field_decl_list rcbrac_

    lcbrac_  shift, and go to state 90


State 40

   55 literal_type: int_ .

    $default  reduce using rule 55 (literal_type)


State 41

   54 literal_type: float_ .

    $default  reduce using rule 54 (literal_type)


State 42

   51 literal_type: bool_ .

    $default  reduce using rule 51 (literal_type)


State 43

   52 literal_type: rune_ .

    $default  reduce using rule 52 (literal_type)


State 44

   53 literal_type: string_ .

    $default  reduce using rule 53 (literal_type)


State 45

   46 pointer_type: mult_ . base_type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 91
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    base_type     go to state 92
    slice_type    go to state 56
    literal_type  go to state 57


State 46

   27 type: lrbrac_ . type rrbrac_

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 93
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 47

   35 array_type: lsbrac_ . expr rsbrac_ type
   48 slice_type: lsbrac_ . rsbrac_ type

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    rsbrac_   shift, and go to state 94
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    expr          go to state 95
    unary_expr    go to state 72
    unary_op      go to state 73
    primary_expr  go to state 74


State 48

   29 type_name: id_ . dot_ id_

    dot_  shift, and go to state 96


State 49

   33 type_lit: func_type .

    $default  reduce using rule 33 (type_lit)


State 50

   62 type_spec: id_ type .

    $default  reduce using rule 62 (type_spec)


State 51

   25 type: type_name .

    $default  reduce using rule 25 (type)


State 52

   26 type: type_lit .

    $default  reduce using rule 26 (type)


State 53

   30 type_lit: array_type .

    $default  reduce using rule 30 (type_lit)


State 54

   31 type_lit: struct_type .

    $default  reduce using rule 31 (type_lit)


State 55

   32 type_lit: pointer_type .

    $default  reduce using rule 32 (type_lit)


State 56

   34 type_lit: slice_type .

    $default  reduce using rule 34 (type_lit)


State 57

   28 type_name: literal_type .

    $default  reduce using rule 28 (type_name)


State 58

   68 var_spec: id_list eq_ . expr_list

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    expr_list     go to state 97
    expr          go to state 71
    unary_expr    go to state 72
    unary_op      go to state 73
    primary_expr  go to state 74


State 59

   69 var_spec: id_list type . eq_ expr_list
   70         | id_list type .

    eq_  shift, and go to state 98

    $default  reduce using rule 70 (var_spec)


State 60

   66 var_decl: lrbrac_ var_spec_list rrbrac_ .

    $default  reduce using rule 66 (var_decl)


State 61

   72 var_spec_list: var_spec_list semi_colon_ . var_spec

    id_  shift, and go to state 12

    id_list   go to state 26
    var_spec  go to state 99


State 62

  102 unary_op: add_ .

    $default  reduce using rule 102 (unary_op)


State 63

  103 unary_op: minus_ .

    $default  reduce using rule 103 (unary_op)


State 64

  106 unary_op: mult_ .

    $default  reduce using rule 106 (unary_op)


State 65

  107 unary_op: amp_ .

    $default  reduce using rule 107 (unary_op)


State 66

  105 unary_op: caret_ .

    $default  reduce using rule 105 (unary_op)


State 67

  108 unary_op: arrow_ .

    $default  reduce using rule 108 (unary_op)


State 68

  104 unary_op: vb_ .

    $default  reduce using rule 104 (unary_op)


State 69

  109 primary_expr: int_lit_ .

    $default  reduce using rule 109 (primary_expr)


State 70

   73 short_var_decl: id_list decla_ expr_list .
   75 expr_list: expr_list . comma_ expr

    comma_  shift, and go to state 100

    $default  reduce using rule 73 (short_var_decl)


State 71

   74 expr_list: expr .
   77 expr: expr . binary_op unary_expr

    add_      shift, and go to state 101
    minus_    shift, and go to state 102
    mult_     shift, and go to state 103
    div_      shift, and go to state 104
    mod_      shift, and go to state 105
    amp_      shift, and go to state 106
    caret_    shift, and go to state 107
    ls_       shift, and go to state 108
    rs_       shift, and go to state 109
    unknown_  shift, and go to state 110
    and_      shift, and go to state 111
    or_       shift, and go to state 112
    lt_       shift, and go to state 113
    gt_       shift, and go to state 114
    eq_       shift, and go to state 115
    not_eq_   shift, and go to state 116
    lteq_     shift, and go to state 117
    gteq_     shift, and go to state 118
    vb_       shift, and go to state 119

    $default  reduce using rule 74 (expr_list)

    binary_op  go to state 120
    rel_op     go to state 121
    add_op     go to state 122
    mul_op     go to state 123


State 72

   76 expr: unary_expr .

    $default  reduce using rule 76 (expr)


State 73

   79 unary_expr: unary_op . unary_expr

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    unary_expr    go to state 124
    unary_op      go to state 73
    primary_expr  go to state 74


State 74

   78 unary_expr: primary_expr .

    $default  reduce using rule 78 (unary_expr)


State 75

   24 id_list: id_list comma_ id_ .

    $default  reduce using rule 24 (id_list)


State 76

   20 params_decl: etc_ . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 125
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 77

   15 params: lrbrac_ rrbrac_ .

    $default  reduce using rule 15 (params)


State 78

   23 id_list: id_ .
   29 type_name: id_ . dot_ id_

    dot_  shift, and go to state 96

    $default  reduce using rule 23 (id_list)


State 79

   16 params: lrbrac_ params_list . rrbrac_
   18 params_list: params_list . comma_ params_decl

    rrbrac_  shift, and go to state 126
    comma_   shift, and go to state 127


State 80

   17 params_list: params_decl .

    $default  reduce using rule 17 (params_list)


State 81

   19 params_decl: id_list . etc_ type
   21            | id_list . type
   24 id_list: id_list . comma_ id_

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    etc_     shift, and go to state 128
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    comma_   shift, and go to state 31
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 129
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 82

   22 params_decl: type .

    $default  reduce using rule 22 (params_decl)


State 83

    9 func_body: block .

    $default  reduce using rule 9 (func_body)


State 84

   10 function: signature func_body .

    $default  reduce using rule 10 (function)


State 85

   13 signature: params result .

    $default  reduce using rule 13 (signature)


State 86

   14 result: type .

    $default  reduce using rule 14 (result)


State 87

   64 type_spec_list: type_spec comma_ . type_spec

    id_  shift, and go to state 24

    type_spec  go to state 130


State 88

   61 type_decl: type_ lrbrac_ type_spec_list rrbrac_ .

    $default  reduce using rule 61 (type_decl)


State 89

   11 func_type: func_ signature .

    $default  reduce using rule 11 (func_type)


State 90

   36 struct_type: struct_ lcbrac_ . field_decl_list rcbrac_

    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 131
    id_      shift, and go to state 78

    id_list          go to state 132
    type_name        go to state 133
    field_decl_list  go to state 134
    field_decl       go to state 135
    anon_field       go to state 136
    literal_type     go to state 57


State 91

   47 base_type: type .

    $default  reduce using rule 47 (base_type)


State 92

   46 pointer_type: mult_ base_type .

    $default  reduce using rule 46 (pointer_type)


State 93

   27 type: lrbrac_ type . rrbrac_

    rrbrac_  shift, and go to state 137


State 94

   48 slice_type: lsbrac_ rsbrac_ . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 138
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 95

   35 array_type: lsbrac_ expr . rsbrac_ type
   77 expr: expr . binary_op unary_expr

    add_      shift, and go to state 101
    minus_    shift, and go to state 102
    mult_     shift, and go to state 103
    div_      shift, and go to state 104
    mod_      shift, and go to state 105
    amp_      shift, and go to state 106
    caret_    shift, and go to state 107
    ls_       shift, and go to state 108
    rs_       shift, and go to state 109
    unknown_  shift, and go to state 110
    and_      shift, and go to state 111
    or_       shift, and go to state 112
    lt_       shift, and go to state 113
    gt_       shift, and go to state 114
    eq_       shift, and go to state 115
    not_eq_   shift, and go to state 116
    lteq_     shift, and go to state 117
    gteq_     shift, and go to state 118
    rsbrac_   shift, and go to state 139
    vb_       shift, and go to state 119

    binary_op  go to state 120
    rel_op     go to state 121
    add_op     go to state 122
    mul_op     go to state 123


State 96

   29 type_name: id_ dot_ . id_

    id_  shift, and go to state 140


State 97

   68 var_spec: id_list eq_ expr_list .
   75 expr_list: expr_list . comma_ expr

    comma_  shift, and go to state 100

    $default  reduce using rule 68 (var_spec)


State 98

   69 var_spec: id_list type eq_ . expr_list

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    expr_list     go to state 141
    expr          go to state 71
    unary_expr    go to state 72
    unary_op      go to state 73
    primary_expr  go to state 74


State 99

   72 var_spec_list: var_spec_list semi_colon_ var_spec .

    $default  reduce using rule 72 (var_spec_list)


State 100

   75 expr_list: expr_list comma_ . expr

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    expr          go to state 142
    unary_expr    go to state 72
    unary_op      go to state 73
    primary_expr  go to state 74


State 101

   91 add_op: add_ .

    $default  reduce using rule 91 (add_op)


State 102

   92 add_op: minus_ .

    $default  reduce using rule 92 (add_op)


State 103

   95 mul_op: mult_ .

    $default  reduce using rule 95 (mul_op)


State 104

   96 mul_op: div_ .

    $default  reduce using rule 96 (mul_op)


State 105

   97 mul_op: mod_ .

    $default  reduce using rule 97 (mul_op)


State 106

  100 mul_op: amp_ .

    $default  reduce using rule 100 (mul_op)


State 107

   94 add_op: caret_ .

    $default  reduce using rule 94 (add_op)


State 108

   98 mul_op: ls_ .

    $default  reduce using rule 98 (mul_op)


State 109

   99 mul_op: rs_ .

    $default  reduce using rule 99 (mul_op)


State 110

  101 mul_op: unknown_ .

    $default  reduce using rule 101 (mul_op)


State 111

   81 binary_op: and_ .

    $default  reduce using rule 81 (binary_op)


State 112

   80 binary_op: or_ .

    $default  reduce using rule 80 (binary_op)


State 113

   87 rel_op: lt_ .

    $default  reduce using rule 87 (rel_op)


State 114

   89 rel_op: gt_ .

    $default  reduce using rule 89 (rel_op)


State 115

   85 rel_op: eq_ .

    $default  reduce using rule 85 (rel_op)


State 116

   86 rel_op: not_eq_ .

    $default  reduce using rule 86 (rel_op)


State 117

   88 rel_op: lteq_ .

    $default  reduce using rule 88 (rel_op)


State 118

   90 rel_op: gteq_ .

    $default  reduce using rule 90 (rel_op)


State 119

   93 add_op: vb_ .

    $default  reduce using rule 93 (add_op)


State 120

   77 expr: expr binary_op . unary_expr

    add_      shift, and go to state 62
    minus_    shift, and go to state 63
    mult_     shift, and go to state 64
    amp_      shift, and go to state 65
    caret_    shift, and go to state 66
    arrow_    shift, and go to state 67
    vb_       shift, and go to state 68
    int_lit_  shift, and go to state 69

    unary_expr    go to state 143
    unary_op      go to state 73
    primary_expr  go to state 74


State 121

   82 binary_op: rel_op .

    $default  reduce using rule 82 (binary_op)


State 122

   83 binary_op: add_op .

    $default  reduce using rule 83 (binary_op)


State 123

   84 binary_op: mul_op .

    $default  reduce using rule 84 (binary_op)


State 124

   79 unary_expr: unary_op unary_expr .

    $default  reduce using rule 79 (unary_expr)


State 125

   20 params_decl: etc_ type .

    $default  reduce using rule 20 (params_decl)


State 126

   16 params: lrbrac_ params_list rrbrac_ .

    $default  reduce using rule 16 (params)


State 127

   18 params_list: params_list comma_ . params_decl

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    etc_     shift, and go to state 76
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 78

    func_type     go to state 49
    params_decl   go to state 144
    id_list       go to state 81
    type          go to state 82
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 128

   19 params_decl: id_list etc_ . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 145
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 129

   21 params_decl: id_list type .

    $default  reduce using rule 21 (params_decl)


State 130

   64 type_spec_list: type_spec comma_ type_spec .

    $default  reduce using rule 64 (type_spec_list)


State 131

   44 anon_field: mult_ . type_name

    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    id_      shift, and go to state 48

    type_name     go to state 146
    literal_type  go to state 57


State 132

   24 id_list: id_list . comma_ id_
   39 field_decl: id_list . type tag
   40           | id_list . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    comma_   shift, and go to state 31
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 147
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 133

   45 anon_field: type_name .

    $default  reduce using rule 45 (anon_field)


State 134

   36 struct_type: struct_ lcbrac_ field_decl_list . rcbrac_
   38 field_decl_list: field_decl_list . field_decl semi

    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 131
    rcbrac_  shift, and go to state 148
    id_      shift, and go to state 78

    id_list       go to state 132
    type_name     go to state 133
    field_decl    go to state 149
    anon_field    go to state 136
    literal_type  go to state 57


State 135

   37 field_decl_list: field_decl . semi

    semi_colon_  shift, and go to state 150
    new_line_    shift, and go to state 151

    semi  go to state 152


State 136

   41 field_decl: anon_field . tag
   42           | anon_field .

    string_lit_  shift, and go to state 153

    $default  reduce using rule 42 (field_decl)

    tag  go to state 154


State 137

   27 type: lrbrac_ type rrbrac_ .

    $default  reduce using rule 27 (type)


State 138

   48 slice_type: lsbrac_ rsbrac_ type .

    $default  reduce using rule 48 (slice_type)


State 139

   35 array_type: lsbrac_ expr rsbrac_ . type

    func_    shift, and go to state 38
    struct_  shift, and go to state 39
    int_     shift, and go to state 40
    float_   shift, and go to state 41
    bool_    shift, and go to state 42
    rune_    shift, and go to state 43
    string_  shift, and go to state 44
    mult_    shift, and go to state 45
    lrbrac_  shift, and go to state 46
    lsbrac_  shift, and go to state 47
    id_      shift, and go to state 48

    func_type     go to state 49
    type          go to state 155
    type_name     go to state 51
    type_lit      go to state 52
    array_type    go to state 53
    struct_type   go to state 54
    pointer_type  go to state 55
    slice_type    go to state 56
    literal_type  go to state 57


State 140

   29 type_name: id_ dot_ id_ .

    $default  reduce using rule 29 (type_name)


State 141

   69 var_spec: id_list type eq_ expr_list .
   75 expr_list: expr_list . comma_ expr

    comma_  shift, and go to state 100

    $default  reduce using rule 69 (var_spec)


State 142

   75 expr_list: expr_list comma_ expr .
   77 expr: expr . binary_op unary_expr

    add_      shift, and go to state 101
    minus_    shift, and go to state 102
    mult_     shift, and go to state 103
    div_      shift, and go to state 104
    mod_      shift, and go to state 105
    amp_      shift, and go to state 106
    caret_    shift, and go to state 107
    ls_       shift, and go to state 108
    rs_       shift, and go to state 109
    unknown_  shift, and go to state 110
    and_      shift, and go to state 111
    or_       shift, and go to state 112
    lt_       shift, and go to state 113
    gt_       shift, and go to state 114
    eq_       shift, and go to state 115
    not_eq_   shift, and go to state 116
    lteq_     shift, and go to state 117
    gteq_     shift, and go to state 118
    vb_       shift, and go to state 119

    $default  reduce using rule 75 (expr_list)

    binary_op  go to state 120
    rel_op     go to state 121
    add_op     go to state 122
    mul_op     go to state 123


State 143

   77 expr: expr binary_op unary_expr .

    $default  reduce using rule 77 (expr)


State 144

   18 params_list: params_list comma_ params_decl .

    $default  reduce using rule 18 (params_list)


State 145

   19 params_decl: id_list etc_ type .

    $default  reduce using rule 19 (params_decl)


State 146

   44 anon_field: mult_ type_name .

    $default  reduce using rule 44 (anon_field)


State 147

   39 field_decl: id_list type . tag
   40           | id_list type .

    string_lit_  shift, and go to state 153

    $default  reduce using rule 40 (field_decl)

    tag  go to state 156


State 148

   36 struct_type: struct_ lcbrac_ field_decl_list rcbrac_ .

    $default  reduce using rule 36 (struct_type)


State 149

   38 field_decl_list: field_decl_list field_decl . semi

    semi_colon_  shift, and go to state 150
    new_line_    shift, and go to state 151

    semi  go to state 157


State 150

   49 semi: semi_colon_ .

    $default  reduce using rule 49 (semi)


State 151

   50 semi: new_line_ .

    $default  reduce using rule 50 (semi)


State 152

   37 field_decl_list: field_decl semi .

    $default  reduce using rule 37 (field_decl_list)


State 153

   43 tag: string_lit_ .

    $default  reduce using rule 43 (tag)


State 154

   41 field_decl: anon_field tag .

    $default  reduce using rule 41 (field_decl)


State 155

   35 array_type: lsbrac_ expr rsbrac_ type .

    $default  reduce using rule 35 (array_type)


State 156

   39 field_decl: id_list type tag .

    $default  reduce using rule 39 (field_decl)


State 157

   38 field_decl_list: field_decl_list field_decl semi .

    $default  reduce using rule 38 (field_decl_list)
